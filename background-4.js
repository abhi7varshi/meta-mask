LavaPack.loadBundle([[88,{"../../shared/constants/app":3258,"../../shared/constants/hardware-wallets":3261,"../../shared/constants/metametrics":3263,"../../shared/constants/network":3264,"../../shared/constants/permissions":3265,"../../shared/constants/phishing":3266,"../../shared/constants/swaps":3268,"../../shared/constants/time":3269,"../../shared/constants/tokens":3270,"../../shared/constants/transaction":3271,"../../shared/lib/metamask-controller-utils":3274,"../../shared/lib/token-util":3278,"../../shared/modules/conversion.utils":3285,"../../shared/modules/hexstring-utils":3288,"../../shared/modules/mv3.utils":3289,"../../shared/modules/string-utils":3295,"../../shared/modules/transaction.utils":3297,"../../shared/notifications":3298,"./account-import-strategies":3,"./controllers/alert":7,"./controllers/app-state":8,"./controllers/backup":9,"./controllers/cached-balances":10,"./controllers/detect-tokens":11,"./controllers/ens":13,"./controllers/incoming-transactions":14,"./controllers/metametrics":15,"./controllers/network":18,"./controllers/onboarding":20,"./controllers/permissions":24,"./controllers/preferences":28,"./controllers/swaps":29,"./controllers/transactions":30,"./detect-multiple-instances":36,"./lib/ComposableObservableStore":38,"./lib/account-tracker":39,"./lib/createDupeReqFilterMiddleware":42,"./lib/createLoggerMiddleware":43,"./lib/createMetaRPCHandler":44,"./lib/createMetamaskMiddleware":45,"./lib/createOnboardingMiddleware":46,"./lib/createOriginMiddleware":47,"./lib/createRPCMethodTrackingMiddleware":48,"./lib/createTabIdMiddleware":50,"./lib/decrypt-message-manager":51,"./lib/encryption-public-key-manager":52,"./lib/message-manager":61,"./lib/personal-message-manager":67,"./lib/rpc-method-middleware":78,"./lib/security-provider-helpers":79,"./lib/seed-phrase-verifier":80,"./lib/segment":82,"./lib/stream-utils":85,"./lib/typed-message-manager":86,"./lib/util":87,"@keystonehq/metamask-airgapped-keyring":496,"@metamask/address-book-controller":930,"@metamask/announcement-controller":936,"@metamask/approval-controller":943,"@metamask/assets-controllers":961,"@metamask/base-controller":966,"@metamask/eth-keyring-controller":1008,"@metamask/eth-ledger-bridge-keyring":1009,"@metamask/gas-fee-controller":1078,"@metamask/obs-store":1114,"@metamask/obs-store/dist/asStream":1113,"@metamask/permission-controller":1121,"@metamask/phishing-controller":1130,"@metamask/smart-transactions-controller":1138,"@metamask/subject-metadata-controller":1143,"@sentry/browser":1198,_process:2828,"await-semaphore":1515,buffer:1739,"eth-json-rpc-middleware":1940,"eth-lattice-keyring":1950,"eth-query":1966,"eth-rpc-errors":1970,"eth-trezor-keyring":1978,events:1740,"json-rpc-engine":2500,"json-rpc-middleware-stream/engineStream":2502,lodash:2730,loglevel:2745,nanoid:2785,pump:2843,"webextension-polyfill":3242},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){(function(t,n){(function(){Object.defineProperty(r,"__esModule",{value:!0}),r.default=r.METAMASK_CONTROLLER_EVENTS=void 0;var s=Le(e("events")),o=Le(e("pump")),i=e("@metamask/obs-store"),a=e("@metamask/obs-store/dist/asStream"),l=e("json-rpc-engine"),c=e("lodash"),d=Le(e("json-rpc-middleware-stream/engineStream")),h=e("eth-json-rpc-middleware"),u=e("@metamask/eth-keyring-controller"),p=e("eth-rpc-errors"),g=e("await-semaphore"),f=Le(e("loglevel")),m=Le(e("eth-trezor-keyring")),y=Le(e("@metamask/eth-ledger-bridge-keyring")),w=Le(e("eth-lattice-keyring")),b=e("@keystonehq/metamask-airgapped-keyring"),C=Le(e("eth-query")),k=Le(e("nanoid")),v=e("@sentry/browser"),T=e("@metamask/address-book-controller"),M=e("@metamask/approval-controller"),S=e("@metamask/base-controller"),A=e("@metamask/assets-controllers"),E=e("@metamask/phishing-controller"),_=e("@metamask/announcement-controller"),P=e("@metamask/gas-fee-controller"),O=e("@metamask/permission-controller"),j=e("@metamask/subject-metadata-controller"),N=Le(e("@metamask/smart-transactions-controller")),I=Le(e("webextension-polyfill")),R=e("../../shared/constants/transaction"),x=e("../../shared/constants/phishing"),B=e("../../shared/constants/swaps"),L=e("../../shared/constants/network"),U=e("../../shared/constants/hardware-wallets"),F=e("../../shared/constants/permissions"),D=e("../../shared/notifications"),K=e("../../shared/modules/hexstring-utils"),H=e("../../shared/constants/time"),q=e("../../shared/constants/app"),$=e("../../shared/constants/metametrics"),V=e("../../shared/lib/token-util"),W=e("../../shared/modules/string-utils"),G=e("../../shared/modules/transaction.utils"),z=e("../../shared/constants/tokens"),J=e("../../shared/lib/metamask-controller-utils"),Q=e("../../shared/modules/mv3.utils"),Y=e("../../shared/modules/conversion.utils"),X=e("./detect-multiple-instances"),Z=Le(e("./lib/ComposableObservableStore")),ee=Le(e("./lib/account-tracker")),te=Le(e("./lib/createDupeReqFilterMiddleware")),re=Le(e("./lib/createLoggerMiddleware")),ne=e("./lib/rpc-method-middleware"),se=Le(e("./lib/createOriginMiddleware")),oe=Le(e("./lib/createTabIdMiddleware")),ie=Le(e("./lib/createOnboardingMiddleware")),ae=e("./lib/stream-utils"),le=Le(e("./controllers/ens")),ce=Be(e("./controllers/network")),de=Le(e("./controllers/preferences")),he=Le(e("./controllers/app-state")),ue=Le(e("./controllers/cached-balances")),pe=Le(e("./controllers/alert")),ge=Le(e("./controllers/onboarding")),fe=Le(e("./controllers/backup")),me=Le(e("./controllers/incoming-transactions")),ye=Be(e("./lib/message-manager")),we=Le(e("./lib/decrypt-message-manager")),be=Le(e("./lib/encryption-public-key-manager")),Ce=Le(e("./lib/personal-message-manager")),ke=Le(e("./lib/typed-message-manager")),ve=Le(e("./controllers/transactions")),Te=Le(e("./controllers/detect-tokens")),Me=Le(e("./controllers/swaps")),Se=Le(e("./account-import-strategies")),Ae=Le(e("./lib/seed-phrase-verifier")),Ee=Le(e("./controllers/metametrics")),_e=e("./lib/segment"),Pe=Le(e("./lib/createMetaRPCHandler")),Oe=e("./lib/util"),je=Le(e("./lib/createMetamaskMiddleware")),Ne=e("./controllers/permissions"),Ie=Le(e("./lib/createRPCMethodTrackingMiddleware")),Re=e("./lib/security-provider-helpers");function xe(e){if("function"!=typeof WeakMap)return null;var t=new WeakMap,r=new WeakMap;return(xe=function(e){return e?r:t})(e)}function Be(e,t){if(!t&&e&&e.__esModule)return e;if(null===e||"object"!=typeof e&&"function"!=typeof e)return{default:e};var r=xe(t);if(r&&r.has(e))return r.get(e);var n={},s=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var o in e)if("default"!==o&&Object.prototype.hasOwnProperty.call(e,o)){var i=s?Object.getOwnPropertyDescriptor(e,o):null;i&&(i.get||i.set)?Object.defineProperty(n,o,i):n[o]=e[o]}return n.default=e,r&&r.set(e,n),n}function Le(e){return e&&e.__esModule?e:{default:e}}function Ue(e,t,r){return(t=function(e){var t=function(e,t){if("object"!=typeof e||null===e)return e;var r=e[Symbol.toPrimitive];if(r!==undefined){var n=r.call(e,t||"default");if("object"!=typeof n)return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===t?String:Number)(e)}(e,"string");return"symbol"==typeof t?t:String(t)}(t))in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}r.METAMASK_CONTROLLER_EVENTS={UPDATE_BADGE:"updateBadge",APPROVAL_STATE_CHANGE:"ApprovalController:stateChange"};class Fe extends s.default{constructor(e){super(),Ue(this,"removePermissionsFor",(e=>{try{this.permissionController.revokePermissions(e)}catch(e){if(!(e instanceof O.PermissionsRequestNotFoundError))throw e}})),Ue(this,"rejectPermissionsRequest",(e=>{try{this.permissionController.rejectPermissionsRequest(e)}catch(e){if(!(e instanceof O.PermissionsRequestNotFoundError))throw e}})),Ue(this,"acceptPermissionsRequest",(e=>{try{this.permissionController.acceptPermissionsRequest(e)}catch(e){if(!(e instanceof O.PermissionsRequestNotFoundError))throw e}})),Ue(this,"resolvePendingApproval",((e,t)=>{try{this.approvalController.accept(e,t)}catch(e){if(!(e instanceof M.ApprovalRequestNotFoundError))throw e}})),Ue(this,"rejectPendingApproval",((e,t)=>{try{this.approvalController.reject(e,new p.EthereumRpcError(t.code,t.message,t.data))}catch(e){if(!(e instanceof M.ApprovalRequestNotFoundError))throw e}})),this.defaultMaxListeners=20,this.sendUpdate=(0,c.debounce)(this.privateSendUpdate.bind(this),200*H.MILLISECOND),this.opts=e,this.extension=e.browser,this.platform=e.platform,this.notificationManager=e.notificationManager;const r=e.initState||{},n=this.platform.getVersion();this.recordFirstTimeInfo(r),this.activeControllerConnections=0,this.getRequestAccountTabIds=e.getRequestAccountTabIds,this.getOpenMetamaskTabsIds=e.getOpenMetamaskTabsIds,this.controllerMessenger=new S.ControllerMessenger,this.localStoreApiWrapper=e.localStore,this.store=new Z.default({state:r,controllerMessenger:this.controllerMessenger,persist:!0}),this.connections={},this.createVaultMutex=new g.Mutex,this.extension.runtime.onInstalled.addListener((e=>{"update"===e.reason&&"8.1.0"===n&&this.platform.openExtensionInBrowser()})),this.approvalController=new M.ApprovalController({messenger:this.controllerMessenger.getRestricted({name:"ApprovalController"}),showApprovalRequest:e.showUserConfirmation}),this.networkController=new ce.default({state:r.NetworkController,infuraProjectId:e.infuraProjectId}),this.networkController.initializeProvider(),this.provider=this.networkController.getProviderAndBlockTracker().provider,this.blockTracker=this.networkController.getProviderAndBlockTracker().blockTracker;const s=this.controllerMessenger.getRestricted({name:"TokenListController"});this.tokenListController=new A.TokenListController({chainId:(0,Y.hexToDecimal)(this.networkController.getCurrentChainId()),preventPollingOnNetworkRestart:!r.TokenListController||r.TokenListController.preventPollingOnNetworkRestart,onNetworkStateChange:e=>{this.networkController.store.subscribe((t=>{const r={...t,providerConfig:{...t.provider,chainId:(0,Y.hexToDecimal)(t.provider.chainId)}};return e(r)}))},messenger:s,state:r.TokenListController}),this.preferencesController=new de.default({initState:r.PreferencesController,initLangCode:e.initLangCode,openPopup:e.openPopup,network:this.networkController,tokenListController:this.tokenListController,provider:this.provider}),this.tokensController=new A.TokensController({onPreferencesStateChange:this.preferencesController.store.subscribe.bind(this.preferencesController.store),onNetworkStateChange:e=>this.networkController.store.subscribe((t=>{const r={...t,providerConfig:{...t.provider}};return e(r)})),config:{provider:this.provider},state:r.TokensController}),this.assetsContractController=new A.AssetsContractController({onPreferencesStateChange:e=>this.preferencesController.store.subscribe(e),onNetworkStateChange:e=>this.networkController.on(ce.NETWORK_EVENTS.NETWORK_DID_CHANGE,(()=>{const t=this.networkController.store.getState(),r={...t,providerConfig:{...t.provider,chainId:(0,Y.hexToDecimal)(t.provider.chainId)}};return e(r)}))},{provider:this.provider},r.AssetsContractController),this.nftController=new A.NftController({onPreferencesStateChange:this.preferencesController.store.subscribe.bind(this.preferencesController.store),onNetworkStateChange:e=>this.networkController.store.subscribe((t=>{const r={...t,providerConfig:{...t.provider,chainId:(0,Y.hexToDecimal)(t.provider.chainId)}};return e(r)})),getERC721AssetName:this.assetsContractController.getERC721AssetName.bind(this.assetsContractController),getERC721AssetSymbol:this.assetsContractController.getERC721AssetSymbol.bind(this.assetsContractController),getERC721TokenURI:this.assetsContractController.getERC721TokenURI.bind(this.assetsContractController),getERC721OwnerOf:this.assetsContractController.getERC721OwnerOf.bind(this.assetsContractController),getERC1155BalanceOf:this.assetsContractController.getERC1155BalanceOf.bind(this.assetsContractController),getERC1155TokenURI:this.assetsContractController.getERC1155TokenURI.bind(this.assetsContractController),onNftAdded:({address:e,symbol:t,tokenId:r,standard:n,source:s})=>this.metaMetricsController.trackEvent({event:$.EVENT_NAMES.NFT_ADDED,category:$.EVENT.CATEGORIES.WALLET,properties:{token_contract_address:e,token_symbol:t,asset_type:R.AssetType.NFT,token_standard:n,source:s},sensitiveProperties:{tokenId:r}})},{},r.NftController),this.nftController.setApiKey(t.env.OPENSEA_KEY),this.metaMetricsController=new Ee.default({segment:_e.segment,preferencesStore:this.preferencesController.store,onNetworkDidChange:this.networkController.on.bind(this.networkController,ce.NETWORK_EVENTS.NETWORK_DID_CHANGE),getNetworkIdentifier:this.networkController.getNetworkIdentifier.bind(this.networkController),getCurrentChainId:this.networkController.getCurrentChainId.bind(this.networkController),version:this.platform.getVersion(),environment:"other",extension:this.extension,initState:r.MetaMetricsController,captureException:v.captureException}),this.on("update",(e=>{this.metaMetricsController.handleMetaMaskStateUpdate(e)}));const o=this.controllerMessenger.getRestricted({name:"GasFeeController"}),i=B.GAS_API_BASE_URL;this.gasFeeController=new P.GasFeeController({state:r.GasFeeController,interval:1e4,messenger:o,clientId:B.SWAPS_CLIENT_ID,getProvider:()=>this.networkController.getProviderAndBlockTracker().provider,onNetworkStateChange:this.networkController.on.bind(this.networkController,ce.NETWORK_EVENTS.NETWORK_DID_CHANGE),getCurrentNetworkEIP1559Compatibility:this.networkController.getEIP1559Compatibility.bind(this.networkController),getCurrentAccountEIP1559Compatibility:this.getCurrentAccountEIP1559Compatibility.bind(this),legacyAPIEndpoint:`${i}/networks/<chain_id>/gasPrices`,EIP1559APIEndpoint:`${i}/networks/<chain_id>/suggestedGasFees`,getCurrentNetworkLegacyGasAPICompatibility:()=>this.networkController.getCurrentChainId()===L.CHAIN_IDS.MAINNET,getChainId:()=>this.networkController.getCurrentChainId()}),this.qrHardwareKeyring=new b.MetaMaskKeyring,this.appStateController=new he.default({addUnlockListener:this.on.bind(this,"unlock"),isUnlocked:this.isUnlocked.bind(this),initState:r.AppStateController,onInactiveTimeout:()=>this.setLocked(),showUnlockRequest:e.showUserConfirmation,preferencesStore:this.preferencesController.store,qrHardwareStore:this.qrHardwareKeyring.getMemStore()});const a=this.controllerMessenger.getRestricted({name:"CurrencyRateController"});this.currencyRateController=new A.CurrencyRateController({includeUsdRate:!0,messenger:a,state:{...r.CurrencyController,nativeCurrency:this.networkController.providerStore.getState().ticker}}),this.phishingController=new E.PhishingController({},r.PhishingController),this.phishingController.maybeUpdatePhishingLists(),this.announcementController=new _.AnnouncementController({allAnnouncements:D.UI_NOTIFICATIONS},r.AnnouncementController),this.tokenRatesController=new A.TokenRatesController({onTokensStateChange:e=>this.tokensController.subscribe(e),onCurrencyRateStateChange:e=>this.controllerMessenger.subscribe(`${this.currencyRateController.name}:stateChange`,e),onNetworkStateChange:e=>this.networkController.store.subscribe((t=>{const r={...t,providerConfig:{...t.provider,chainId:(0,Y.hexToDecimal)(t.provider.chainId)}};return e(r)}))},{disabled:!this.preferencesController.store.getState().useCurrencyRateCheck},r.TokenRatesController),this.preferencesController.store.subscribe((0,Oe.previousValueComparator)(((e,t)=>{const{useCurrencyRateCheck:r}=e,{useCurrencyRateCheck:n}=t;n&&!r?(this.currencyRateController.start(),this.tokenRatesController.configure({disabled:!1},!1,!1)):!n&&r&&(this.currencyRateController.stop(),this.tokenRatesController.configure({disabled:!0},!1,!1))}),this.preferencesController.store.getState())),this.ensController=new le.default({provider:this.provider,getCurrentChainId:this.networkController.getCurrentChainId.bind(this.networkController),onNetworkDidChange:this.networkController.on.bind(this.networkController,ce.NETWORK_EVENTS.NETWORK_DID_CHANGE)}),this.onboardingController=new ge.default({initState:r.OnboardingController}),this.incomingTransactionsController=new me.default({blockTracker:this.blockTracker,onNetworkDidChange:this.networkController.on.bind(this.networkController,ce.NETWORK_EVENTS.NETWORK_DID_CHANGE),getCurrentChainId:this.networkController.getCurrentChainId.bind(this.networkController),preferencesController:this.preferencesController,onboardingController:this.onboardingController,initState:r.IncomingTransactionsController}),this.accountTracker=new ee.default({provider:this.provider,blockTracker:this.blockTracker,getCurrentChainId:this.networkController.getCurrentChainId.bind(this.networkController),getNetworkIdentifier:this.networkController.getNetworkIdentifier.bind(this.networkController),preferencesController:this.preferencesController,onboardingController:this.onboardingController}),this.on("controllerConnectionChanged",(e=>{const{completedOnboarding:t}=this.onboardingController.store.getState();e>0&&t?this.triggerNetworkrequests():this.stopNetworkRequests()})),this.onboardingController.store.subscribe((0,Oe.previousValueComparator)((async(e,t)=>{const{completedOnboarding:r}=e,{completedOnboarding:n}=t;!r&&n&&this.triggerNetworkrequests()}),this.onboardingController.store.getState())),this.cachedBalancesController=new ue.default({accountTracker:this.accountTracker,getCurrentChainId:this.networkController.getCurrentChainId.bind(this.networkController),initState:r.CachedBalancesController}),this.tokensController.hub.on("pendingSuggestedAsset",(async()=>{await e.openPopup()}));let l=[(0,u.keyringBuilderFactory)(b.MetaMaskKeyring)];if(this.canUseHardwareWallets()){l=[m.default,y.default,w.default,b.MetaMaskKeyring].map((e=>(0,u.keyringBuilderFactory)(e)))}this.keyringController=new u.KeyringController({keyringBuilders:l,initState:r.KeyringController,encryptor:e.encryptor||undefined,cacheEncryptionKey:Q.isManifestV3}),this.keyringController.memStore.subscribe((e=>this._onKeyringControllerUpdate(e))),this.keyringController.on("unlock",(()=>this._onUnlock())),this.keyringController.on("lock",(()=>this._onLock()));const d=()=>this.preferencesController.store.getState().identities;this.permissionController=new O.PermissionController({messenger:this.controllerMessenger.getRestricted({name:"PermissionController",allowedActions:[`${this.approvalController.name}:addRequest`,`${this.approvalController.name}:hasRequest`,`${this.approvalController.name}:acceptRequest`,`${this.approvalController.name}:rejectRequest`]}),state:r.PermissionController,caveatSpecifications:(0,Ne.getCaveatSpecifications)({getIdentities:d}),permissionSpecifications:{...(0,Ne.getPermissionSpecifications)({getIdentities:d,getAllAccounts:this.keyringController.getAccounts.bind(this.keyringController),captureKeyringTypesWithMissingIdentities:(e={},t=[])=>{const r=t.filter((t=>!e[t])).map((e=>{var t;return null===(t=this.keyringController.getKeyringForAccount(e))||void 0===t?void 0:t.type})),n=Object.keys(e||{}).length,s=Object.keys(this.accountTracker.store.getState().accounts||{}).length;(0,v.captureException)(new Error(`Attempt to get permission specifications failed because their were ${t.length} accounts, but ${n} identities, and the ${r} keyrings included accounts with missing identities. Meanwhile, there are ${s} accounts in the account tracker.`))}})},unrestrictedMethods:Ne.unrestrictedMethods}),this.permissionLogController=new Ne.PermissionLogController({restrictedMethods:new Set(Object.keys(F.RestrictedMethods)),initState:r.PermissionLogController}),this.subjectMetadataController=new j.SubjectMetadataController({messenger:this.controllerMessenger.getRestricted({name:"SubjectMetadataController",allowedActions:[`${this.permissionController.name}:hasPermissions`]}),state:r.SubjectMetadataController,subjectCacheLimit:100}),this.detectTokensController=new Te.default({preferences:this.preferencesController,tokensController:this.tokensController,assetsContractController:this.assetsContractController,network:this.networkController,keyringMemStore:this.keyringController.memStore,tokenList:this.tokenListController,trackMetaMetricsEvent:this.metaMetricsController.trackEvent.bind(this.metaMetricsController)}),this.addressBookController=new T.AddressBookController(undefined,r.AddressBookController),this.alertController=new pe.default({initState:r.AlertController,preferencesStore:this.preferencesController.store}),this.backupController=new fe.default({preferencesController:this.preferencesController,addressBookController:this.addressBookController,trackMetaMetricsEvent:this.metaMetricsController.trackEvent.bind(this.metaMetricsController)}),this.txController=new ve.default({initState:r.TransactionController||r.TransactionManager,getPermittedAccounts:this.getPermittedAccounts.bind(this),getProviderConfig:this.networkController.getProviderConfig.bind(this.networkController),getCurrentNetworkEIP1559Compatibility:this.networkController.getEIP1559Compatibility.bind(this.networkController),getCurrentAccountEIP1559Compatibility:this.getCurrentAccountEIP1559Compatibility.bind(this),getNetworkState:()=>this.networkController.networkStore.getState(),onNetworkStateChange:e=>this.networkController.networkStore.subscribe(e),getCurrentChainId:this.networkController.getCurrentChainId.bind(this.networkController),preferencesStore:this.preferencesController.store,txHistoryLimit:60,signTransaction:this.keyringController.signTransaction.bind(this.keyringController),provider:this.provider,blockTracker:this.blockTracker,createEventFragment:this.metaMetricsController.createEventFragment.bind(this.metaMetricsController),updateEventFragment:this.metaMetricsController.updateEventFragment.bind(this.metaMetricsController),finalizeEventFragment:this.metaMetricsController.finalizeEventFragment.bind(this.metaMetricsController),getEventFragmentById:this.metaMetricsController.getEventFragmentById.bind(this.metaMetricsController),trackMetaMetricsEvent:this.metaMetricsController.trackEvent.bind(this.metaMetricsController),getParticipateInMetrics:()=>this.metaMetricsController.state.participateInMetaMetrics,getEIP1559GasFeeEstimates:this.gasFeeController.fetchGasFeeEstimates.bind(this.gasFeeController),getExternalPendingTransactions:this.getExternalPendingTransactions.bind(this),getAccountType:this.getAccountType.bind(this),getDeviceModel:this.getDeviceModel.bind(this),getTokenStandardAndDetails:this.assetsContractController.getTokenStandardAndDetails.bind(this.assetsContractController),securityProviderRequest:this.securityProviderRequest.bind(this)}),this.txController.on("newUnapprovedTx",(()=>e.showUserConfirmation())),this.txController.on("tx:status-update",(async(e,t)=>{if(t===R.TransactionStatus.confirmed||t===R.TransactionStatus.failed){const t=this.txController.txStateManager.getTransaction(e),a=this.preferencesController.getFrequentRpcListDetail();let l={};if(t.chainId){var r;const e=a.find((e=>t.chainId===e.chainId));l=null!==(r=null==e?void 0:e.rpcPrefs)&&void 0!==r?r:{}}this.platform.showTransactionNotification(t,l);const{txReceipt:c}=t;if(t.type===R.TransactionType.tokenMethodTransferFrom&&t.txParams!==undefined){var n,s,o;const{data:e,to:r,from:i}=t.txParams,{chainId:a}=t,l=(0,G.parseStandardTokenTransactionData)(e),c=null!==(n=(0,V.getTokenIdParam)(l))&&void 0!==n?n:(0,J.getTokenValueParam)(l),{allNfts:d}=this.nftController.state,h=(0,Y.hexToDecimal)(a),u=null==d||null===(s=d[i])||void 0===s||null===(o=s[h])||void 0===o?void 0:o.find((({address:e,tokenId:t})=>(0,W.isEqualCaseInsensitive)(e,r)&&t===c));u&&this.nftController.checkAndUpdateSingleNftOwnershipStatus(u,!1,{userAddress:i,chainId:h})}const d=this.getState();var i;if(c&&"0x0"===c.status)this.metaMetricsController.trackEvent({event:"Tx Status Update: On-Chain Failure",category:$.EVENT.CATEGORIES.BACKGROUND,properties:{action:"Transactions",errorMessage:null===(i=t.simulationFails)||void 0===i?void 0:i.reason,numberOfTokens:d.tokens.length,numberOfAccounts:Object.keys(d.accounts).length}},{matomoEvent:!0})}})),this.networkController.on(ce.NETWORK_EVENTS.NETWORK_DID_CHANGE,(async()=>{const{ticker:e}=this.networkController.getProviderConfig();try{await this.currencyRateController.setNativeCurrency(e)}catch(e){console.error(e)}})),this.networkController.lookupNetwork(),this.messageManager=new ye.default({metricsEvent:this.metaMetricsController.trackEvent.bind(this.metaMetricsController),securityProviderRequest:this.securityProviderRequest.bind(this)}),this.personalMessageManager=new Ce.default({metricsEvent:this.metaMetricsController.trackEvent.bind(this.metaMetricsController),securityProviderRequest:this.securityProviderRequest.bind(this)}),this.decryptMessageManager=new we.default({metricsEvent:this.metaMetricsController.trackEvent.bind(this.metaMetricsController)}),this.encryptionPublicKeyManager=new be.default({metricsEvent:this.metaMetricsController.trackEvent.bind(this.metaMetricsController)}),this.typedMessageManager=new ke.default({getCurrentChainId:this.networkController.getCurrentChainId.bind(this.networkController),metricsEvent:this.metaMetricsController.trackEvent.bind(this.metaMetricsController),securityProviderRequest:this.securityProviderRequest.bind(this)}),this.swapsController=new Me.default({getBufferedGasLimit:this.txController.txGasUtil.getBufferedGasLimit.bind(this.txController.txGasUtil),networkController:this.networkController,provider:this.provider,getProviderConfig:this.networkController.getProviderConfig.bind(this.networkController),getTokenRatesState:()=>this.tokenRatesController.state,getCurrentChainId:this.networkController.getCurrentChainId.bind(this.networkController),getEIP1559GasFeeEstimates:this.gasFeeController.fetchGasFeeEstimates.bind(this.gasFeeController)}),this.smartTransactionsController=new N.default({onNetworkStateChange:e=>{this.networkController.store.subscribe((t=>{const r={...t,providerConfig:{...t.provider}};return e(r)}))},getNetwork:this.networkController.getNetworkState.bind(this.networkController),getNonceLock:this.txController.nonceTracker.getNonceLock.bind(this.txController.nonceTracker),confirmExternalTransaction:this.txController.confirmExternalTransaction.bind(this.txController),provider:this.provider,trackMetaMetricsEvent:this.metaMetricsController.trackEvent.bind(this.metaMetricsController)},{supportedChainIds:[L.CHAIN_IDS.MAINNET,L.CHAIN_IDS.GOERLI]},r.SmartTransactionsController),this.networkController.on(ce.NETWORK_EVENTS.NETWORK_DID_CHANGE,(()=>{this.accountTracker._updateAccounts()})),this.networkController.on(ce.NETWORK_EVENTS.NETWORK_WILL_CHANGE,(()=>{this.txController.txStateManager.clearUnapprovedTxs(),this.encryptionPublicKeyManager.clearUnapproved(),this.personalMessageManager.clearUnapproved(),this.typedMessageManager.clearUnapproved(),this.decryptMessageManager.clearUnapproved(),this.messageManager.clearUnapproved()})),this.metamaskMiddleware=(0,je.default)({static:{eth_syncing:!1,web3_clientVersion:`MetaMask/v${n}`},version:n,getAccounts:async({origin:e},{suppressUnauthorizedError:t=!0}={})=>{if(e===q.ORIGIN_METAMASK){const e=this.preferencesController.getSelectedAddress();return e?[e]:[]}return this.isUnlocked()?await this.getPermittedAccounts(e,{suppressUnauthorizedError:t}):[]},processTransaction:this.newUnapprovedTransaction.bind(this),processEthSignMessage:this.newUnsignedMessage.bind(this),processTypedMessage:this.newUnsignedTypedMessage.bind(this),processTypedMessageV3:this.newUnsignedTypedMessage.bind(this),processTypedMessageV4:this.newUnsignedTypedMessage.bind(this),processPersonalMessage:this.newUnsignedPersonalMessage.bind(this),processDecryptMessage:this.newRequestDecryptMessage.bind(this),processEncryptionPublicKey:this.newRequestEncryptionPublicKey.bind(this),getPendingNonce:this.getPendingNonce.bind(this),getPendingTransactionByHash:e=>this.txController.getTransactions({searchCriteria:{hash:e,status:R.TransactionStatus.submitted}})[0]}),this.on("update",(e=>this._onStateUpdate(e)));const h={AccountTracker:this.accountTracker.store,TxController:this.txController.memStore,TokenRatesController:this.tokenRatesController,MessageManager:this.messageManager.memStore,PersonalMessageManager:this.personalMessageManager.memStore,DecryptMessageManager:this.decryptMessageManager.memStore,EncryptionPublicKeyManager:this.encryptionPublicKeyManager.memStore,TypesMessageManager:this.typedMessageManager.memStore,SwapsController:this.swapsController.store,EnsController:this.ensController.store,ApprovalController:this.approvalController};this.store.updateStructure({AppStateController:this.appStateController.store,TransactionController:this.txController.store,KeyringController:this.keyringController.store,PreferencesController:this.preferencesController.store,MetaMetricsController:this.metaMetricsController.store,AddressBookController:this.addressBookController,CurrencyController:this.currencyRateController,NetworkController:this.networkController.store,CachedBalancesController:this.cachedBalancesController.store,AlertController:this.alertController.store,OnboardingController:this.onboardingController.store,IncomingTransactionsController:this.incomingTransactionsController.store,PermissionController:this.permissionController,PermissionLogController:this.permissionLogController.store,SubjectMetadataController:this.subjectMetadataController,BackupController:this.backupController,AnnouncementController:this.announcementController,GasFeeController:this.gasFeeController,TokenListController:this.tokenListController,TokensController:this.tokensController,SmartTransactionsController:this.smartTransactionsController,NftController:this.nftController,PhishingController:this.phishingController,...h}),this.memStore=new Z.default({config:{AppStateController:this.appStateController.store,NetworkController:this.networkController.store,CachedBalancesController:this.cachedBalancesController.store,KeyringController:this.keyringController.memStore,PreferencesController:this.preferencesController.store,MetaMetricsController:this.metaMetricsController.store,AddressBookController:this.addressBookController,CurrencyController:this.currencyRateController,AlertController:this.alertController.store,OnboardingController:this.onboardingController.store,IncomingTransactionsController:this.incomingTransactionsController.store,PermissionController:this.permissionController,PermissionLogController:this.permissionLogController.store,SubjectMetadataController:this.subjectMetadataController,BackupController:this.backupController,AnnouncementController:this.announcementController,GasFeeController:this.gasFeeController,TokenListController:this.tokenListController,TokensController:this.tokensController,SmartTransactionsController:this.smartTransactionsController,NftController:this.nftController,...h},controllerMessenger:this.controllerMessenger});const f=[this.accountTracker.resetState,this.txController.resetState,this.messageManager.resetState,this.personalMessageManager.resetState,this.decryptMessageManager.resetState,this.encryptionPublicKeyManager.resetState,this.typedMessageManager.resetState,this.swapsController.resetState,this.ensController.resetState,this.approvalController.clear.bind(this.approvalController)];Q.isManifestV3?!0===globalThis.isFirstTimeProfileLoaded&&this.resetStates(f):this.resetStates(f),!this.isUnlocked()&&this.onboardingController.store.getState().completedOnboarding?this._loginUser():this._startUISync(),this.extension.runtime.getPlatformInfo().then((({os:e})=>{this.appStateController.setBrowserEnvironment(e,this.extension.runtime.getBrowserInfo===undefined?"chrome":"firefox")})),this.setupControllerEventSubscriptions(),this.publicConfigStore=this.createPublicConfigStore(),this.extension.runtime.onMessageExternal.addListener(X.onMessageReceived),(0,X.checkForMultipleVersionsRunning)()}triggerNetworkrequests(){this.accountTracker.start(),this.incomingTransactionsController.start(),this.preferencesController.store.getState().useCurrencyRateCheck&&this.currencyRateController.start(),this.preferencesController.store.getState().useTokenDetection&&this.tokenListController.start()}stopNetworkRequests(){this.accountTracker.stop(),this.incomingTransactionsController.stop(),this.preferencesController.store.getState().useCurrencyRateCheck&&this.currencyRateController.stop(),this.preferencesController.store.getState().useTokenDetection&&this.tokenListController.stop()}canUseHardwareWallets(){var e;return!Q.isManifestV3||(null===(e={})||void 0===e?void 0:e.HARDWARE_WALLETS_MV3)}resetStates(e){e.forEach((e=>{try{e()}catch(e){console.error(e)}})),globalThis.isFirstTimeProfileLoaded=!1}setupControllerEventSubscriptions(){const e=async(e,t)=>{this.isUnlocked()&&this.notifyConnections(e,{method:Ne.NOTIFICATION_NAMES.accountsChanged,params:t.length<2?t:await this.getPermittedAccounts(e)}),this.permissionLogController.updateAccountsHistory(e,t)};let t;this.preferencesController.store.subscribe((async({selectedAddress:r})=>{if(r&&r!==t){t=r;const n=(0,Ne.getPermittedAccountsByOrigin)(this.permissionController.state);for(const[t,s]of n.entries())s.includes(r)&&e(t,s)}})),this.controllerMessenger.subscribe(`${this.permissionController.name}:stateChange`,(async(t,r)=>{const n=(0,Ne.getChangedAccounts)(t,r);for(const[t,r]of n.entries())e(t,r)}),Ne.getPermittedAccountsByOrigin)}createPublicConfigStore(){const e=new i.ObservableStore,{networkController:t}=this;function r(r){const n=t.getCurrentChainId();"loading"!==r.network&&e.putState(function(e,{isUnlocked:t,network:r}){return{isUnlocked:t,chainId:e,networkVersion:r}}(n,r))}return this.on("update",r),r(this.getState()),e}async getProviderState(e){return{isUnlocked:this.isUnlocked(),...this.getProviderNetworkState(),accounts:await this.getPermittedAccounts(e)}}getProviderNetworkState(e){const{network:t}=e||this.getState();return{chainId:this.networkController.getCurrentChainId(),networkVersion:t}}getState(){const{vault:e}=this.keyringController.store.getState();return{isInitialized:Boolean(e),...this.memStore.getFlatState()}}getApi(){const{addressBookController:e,alertController:t,appStateController:r,nftController:n,nftDetectionController:s,currencyRateController:o,detectTokensController:i,ensController:a,gasFeeController:l,metaMetricsController:c,networkController:d,announcementController:h,onboardingController:u,permissionController:p,preferencesController:g,qrHardwareKeyring:f,swapsController:m,tokensController:y,smartTransactionsController:w,txController:b,assetsContractController:C,backupController:k}=this;return{getState:this.getState.bind(this),setCurrentCurrency:o.setCurrentCurrency.bind(o),setUseBlockie:g.setUseBlockie.bind(g),setUseNonceField:g.setUseNonceField.bind(g),setUsePhishDetect:g.setUsePhishDetect.bind(g),setUseMultiAccountBalanceChecker:g.setUseMultiAccountBalanceChecker.bind(g),setUseTokenDetection:g.setUseTokenDetection.bind(g),setUseNftDetection:g.setUseNftDetection.bind(g),setUseCurrencyRateCheck:g.setUseCurrencyRateCheck.bind(g),setOpenSeaEnabled:g.setOpenSeaEnabled.bind(g),setIpfsGateway:g.setIpfsGateway.bind(g),setParticipateInMetaMetrics:c.setParticipateInMetaMetrics.bind(c),setCurrentLocale:g.setCurrentLocale.bind(g),markPasswordForgotten:this.markPasswordForgotten.bind(this),unMarkPasswordForgotten:this.unMarkPasswordForgotten.bind(this),getRequestAccountTabIds:this.getRequestAccountTabIds,getOpenMetamaskTabsIds:this.getOpenMetamaskTabsIds,markNotificationPopupAsAutomaticallyClosed:()=>this.notificationManager.markAsAutomaticallyClosed(),addNewAccount:this.addNewAccount.bind(this),verifySeedPhrase:this.verifySeedPhrase.bind(this),resetAccount:this.resetAccount.bind(this),removeAccount:this.removeAccount.bind(this),importAccountWithStrategy:this.importAccountWithStrategy.bind(this),connectHardware:this.connectHardware.bind(this),forgetDevice:this.forgetDevice.bind(this),checkHardwareStatus:this.checkHardwareStatus.bind(this),unlockHardwareWalletAccount:this.unlockHardwareWalletAccount.bind(this),setLedgerTransportPreference:this.setLedgerTransportPreference.bind(this),attemptLedgerTransportCreation:this.attemptLedgerTransportCreation.bind(this),establishLedgerTransportPreference:this.establishLedgerTransportPreference.bind(this),submitQRHardwareCryptoHDKey:f.submitCryptoHDKey.bind(f),submitQRHardwareCryptoAccount:f.submitCryptoAccount.bind(f),cancelSyncQRHardware:f.cancelSync.bind(f),submitQRHardwareSignature:f.submitSignature.bind(f),cancelQRHardwareSignRequest:f.cancelSignRequest.bind(f),fetchInfoToSync:this.fetchInfoToSync.bind(this),submitPassword:this.submitPassword.bind(this),verifyPassword:this.verifyPassword.bind(this),setProviderType:d.setProviderType.bind(d),rollbackToPreviousProvider:d.rollbackToPreviousProvider.bind(d),setCustomRpc:this.setCustomRpc.bind(this),updateAndSetCustomRpc:this.updateAndSetCustomRpc.bind(this),delCustomRpc:this.delCustomRpc.bind(this),addCustomNetwork:this.addCustomNetwork.bind(this),requestAddNetworkApproval:this.requestAddNetworkApproval.bind(this),setSelectedAddress:g.setSelectedAddress.bind(g),addToken:y.addToken.bind(y),rejectWatchAsset:y.rejectWatchAsset.bind(y),acceptWatchAsset:y.acceptWatchAsset.bind(y),updateTokenType:y.updateTokenType.bind(y),setAccountLabel:g.setAccountLabel.bind(g),setFeatureFlag:g.setFeatureFlag.bind(g),setPreference:g.setPreference.bind(g),addKnownMethodData:g.addKnownMethodData.bind(g),setDismissSeedBackUpReminder:g.setDismissSeedBackUpReminder.bind(g),setAdvancedGasFee:g.setAdvancedGasFee.bind(g),setTheme:g.setTheme.bind(g),setTransactionSecurityCheckEnabled:g.setTransactionSecurityCheckEnabled.bind(g),getTokenStandardAndDetails:this.getTokenStandardAndDetails.bind(this),addNft:n.addNft.bind(n),addNftVerifyOwnership:n.addNftVerifyOwnership.bind(n),removeAndIgnoreNft:n.removeAndIgnoreNft.bind(n),removeNft:n.removeNft.bind(n),checkAndUpdateAllNftsOwnershipStatus:n.checkAndUpdateAllNftsOwnershipStatus.bind(n),checkAndUpdateSingleNftOwnershipStatus:n.checkAndUpdateSingleNftOwnershipStatus.bind(n),isNftOwner:n.isNftOwner.bind(n),setAddressBook:e.set.bind(e),removeFromAddressBook:e.delete.bind(e),setLastActiveTime:r.setLastActiveTime.bind(r),setDefaultHomeActiveTabName:r.setDefaultHomeActiveTabName.bind(r),setConnectedStatusPopoverHasBeenShown:r.setConnectedStatusPopoverHasBeenShown.bind(r),setRecoveryPhraseReminderHasBeenShown:r.setRecoveryPhraseReminderHasBeenShown.bind(r),setRecoveryPhraseReminderLastShown:r.setRecoveryPhraseReminderLastShown.bind(r),setShowTestnetMessageInDropdown:r.setShowTestnetMessageInDropdown.bind(r),setShowPortfolioTooltip:r.setShowPortfolioTooltip.bind(r),setShowBetaHeader:r.setShowBetaHeader.bind(r),updateCollectibleDropDownState:r.updateCollectibleDropDownState.bind(r),setFirstTimeUsedNetwork:r.setFirstTimeUsedNetwork.bind(r),tryReverseResolveAddress:a.reverseResolveAddress.bind(a),setLocked:this.setLocked.bind(this),createNewVaultAndKeychain:this.createNewVaultAndKeychain.bind(this),createNewVaultAndRestore:this.createNewVaultAndRestore.bind(this),exportAccount:this.exportAccount.bind(this),cancelTransaction:b.cancelTransaction.bind(b),updateTransaction:b.updateTransaction.bind(b),updateAndApproveTransaction:b.updateAndApproveTransaction.bind(b),approveTransactionsWithSameNonce:b.approveTransactionsWithSameNonce.bind(b),createCancelTransaction:this.createCancelTransaction.bind(this),createSpeedUpTransaction:this.createSpeedUpTransaction.bind(this),estimateGas:this.estimateGas.bind(this),getNextNonce:this.getNextNonce.bind(this),addUnapprovedTransaction:b.addUnapprovedTransaction.bind(b),createTransactionEventFragment:b.createTransactionEventFragment.bind(b),getTransactions:b.getTransactions.bind(b),updateEditableParams:b.updateEditableParams.bind(b),updateTransactionGasFees:b.updateTransactionGasFees.bind(b),updateTransactionSendFlowHistory:b.updateTransactionSendFlowHistory.bind(b),updateSwapApprovalTransaction:b.updateSwapApprovalTransaction.bind(b),updateSwapTransaction:b.updateSwapTransaction.bind(b),updatePreviousGasParams:b.updatePreviousGasParams.bind(b),signMessage:this.signMessage.bind(this),cancelMessage:this.cancelMessage.bind(this),signPersonalMessage:this.signPersonalMessage.bind(this),cancelPersonalMessage:this.cancelPersonalMessage.bind(this),signTypedMessage:this.signTypedMessage.bind(this),cancelTypedMessage:this.cancelTypedMessage.bind(this),decryptMessage:this.decryptMessage.bind(this),decryptMessageInline:this.decryptMessageInline.bind(this),cancelDecryptMessage:this.cancelDecryptMessage.bind(this),encryptionPublicKey:this.encryptionPublicKey.bind(this),cancelEncryptionPublicKey:this.cancelEncryptionPublicKey.bind(this),setSeedPhraseBackedUp:u.setSeedPhraseBackedUp.bind(u),completeOnboarding:u.completeOnboarding.bind(u),setFirstTimeFlowType:u.setFirstTimeFlowType.bind(u),setAlertEnabledness:t.setAlertEnabledness.bind(t),setUnconnectedAccountAlertShown:t.setUnconnectedAccountAlertShown.bind(t),setWeb3ShimUsageAlertDismissed:t.setWeb3ShimUsageAlertDismissed.bind(t),removePermissionsFor:this.removePermissionsFor,approvePermissionsRequest:this.acceptPermissionsRequest,rejectPermissionsRequest:this.rejectPermissionsRequest,...(0,Ne.getPermissionBackgroundApiMethods)(p),fetchAndSetQuotes:m.fetchAndSetQuotes.bind(m),setSelectedQuoteAggId:m.setSelectedQuoteAggId.bind(m),resetSwapsState:m.resetSwapsState.bind(m),setSwapsTokens:m.setSwapsTokens.bind(m),clearSwapsQuotes:m.clearSwapsQuotes.bind(m),setApproveTxId:m.setApproveTxId.bind(m),setTradeTxId:m.setTradeTxId.bind(m),setSwapsTxGasPrice:m.setSwapsTxGasPrice.bind(m),setSwapsTxGasLimit:m.setSwapsTxGasLimit.bind(m),setSwapsTxMaxFeePerGas:m.setSwapsTxMaxFeePerGas.bind(m),setSwapsTxMaxFeePriorityPerGas:m.setSwapsTxMaxFeePriorityPerGas.bind(m),safeRefetchQuotes:m.safeRefetchQuotes.bind(m),stopPollingForQuotes:m.stopPollingForQuotes.bind(m),setBackgroundSwapRouteState:m.setBackgroundSwapRouteState.bind(m),resetPostFetchState:m.resetPostFetchState.bind(m),setSwapsErrorKey:m.setSwapsErrorKey.bind(m),setInitialGasEstimate:m.setInitialGasEstimate.bind(m),setCustomApproveTxData:m.setCustomApproveTxData.bind(m),setSwapsLiveness:m.setSwapsLiveness.bind(m),setSwapsFeatureFlags:m.setSwapsFeatureFlags.bind(m),setSwapsUserFeeLevel:m.setSwapsUserFeeLevel.bind(m),setSwapsQuotesPollingLimitEnabled:m.setSwapsQuotesPollingLimitEnabled.bind(m),setSmartTransactionsOptInStatus:w.setOptInState.bind(w),fetchSmartTransactionFees:w.getFees.bind(w),clearSmartTransactionFees:w.clearFees.bind(w),submitSignedTransactions:w.submitSignedTransactions.bind(w),cancelSmartTransaction:w.cancelSmartTransaction.bind(w),fetchSmartTransactionsLiveness:w.fetchLiveness.bind(w),updateSmartTransaction:w.updateSmartTransaction.bind(w),setStatusRefreshInterval:w.setStatusRefreshInterval.bind(w),trackMetaMetricsEvent:c.trackEvent.bind(c),trackMetaMetricsPage:c.trackPage.bind(c),createEventFragment:c.createEventFragment.bind(c),updateEventFragment:c.updateEventFragment.bind(c),finalizeEventFragment:c.finalizeEventFragment.bind(c),resolvePendingApproval:this.resolvePendingApproval,rejectPendingApproval:this.rejectPendingApproval,updateViewedNotifications:h.updateViewed.bind(h),getGasFeeEstimatesAndStartPolling:l.getGasFeeEstimatesAndStartPolling.bind(l),disconnectGasFeeEstimatePoller:l.disconnectPoller.bind(l),getGasFeeTimeEstimate:l.getTimeEstimate.bind(l),addPollingTokenToAppState:r.addPollingToken.bind(r),removePollingTokenFromAppState:r.removePollingToken.bind(r),backupUserData:k.backupUserData.bind(k),restoreUserData:k.restoreUserData.bind(k),detectNewTokens:i.detectNewTokens.bind(i),detectNfts:null,addDetectedTokens:y.addDetectedTokens.bind(y),addImportedTokens:y.addTokens.bind(y),ignoreTokens:y.ignoreTokens.bind(y),getBalancesInSingleCall:C.getBalancesInSingleCall.bind(C)}}async exportAccount(e,t){return await this.verifyPassword(t),this.keyringController.exportAccount(e,t)}async getTokenStandardAndDetails(e,t,r){var n,s;const o=await this.assetsContractController.getTokenStandardAndDetails(e,t,r);return{...o,decimals:null==o||null===(n=o.decimals)||void 0===n?void 0:n.toString(10),balance:null==o||null===(s=o.balance)||void 0===s?void 0:s.toString(10)}}async createNewVaultAndKeychain(e){const t=await this.createVaultMutex.acquire();try{let r;if((await this.keyringController.getAccounts()).length>0)r=await this.keyringController.fullUpdate();else{r=await this.keyringController.createNewVaultAndKeychain(e);const t=await this.keyringController.getAccounts();this.preferencesController.setAddresses(t),this.selectFirstIdentity()}return r}finally{t()}}async requestAddNetworkApproval(e,t){try{await this.approvalController.addAndShowApprovalRequest({origin:"metamask",type:"wallet_addEthereumChain",requestData:{chainId:e.chainId,blockExplorerUrl:e.rpcPrefs.blockExplorerUrl,chainName:e.nickname,rpcUrl:e.rpcUrl,ticker:e.ticker,imageUrl:e.rpcPrefs.imageUrl}})}catch(e){if(!t||"User rejected the request."!==e.message)throw e}}async addCustomNetwork(e,t){const{chainId:r,chainName:n,rpcUrl:s,ticker:o,blockExplorerUrl:i}=e;this.preferencesController.upsertToFrequentRpcList(s,r,o,n,{blockExplorerUrl:i}),this.metaMetricsController.trackEvent({event:"Custom Network Added",category:$.EVENT.CATEGORIES.NETWORK,referrer:{url:q.ORIGIN_METAMASK},properties:{chain_id:r,symbol:o,source:$.EVENT.SOURCE.NETWORK.POPULAR_NETWORK_LIST},actionId:t})}async createNewVaultAndRestore(e,t){const r=await this.createVaultMutex.acquire();try{let s,o;const i=n.from(t),{keyringController:a}=this;this.preferencesController.setAddresses([]),this.permissionController.clearState(),this.accountTracker.clearAccounts(),this.cachedBalancesController.clearCachedBalances(),this.txController.txStateManager.clearUnapprovedTxs();const l=await a.createNewVaultAndRestore(e,i),c=new C.default(this.provider);s=await a.getAccounts(),o=await this.getBalance(s[s.length-1],c);const[d]=a.getKeyringsByType(U.HardwareKeyringTypes.hdKeyTree);if(!d)throw new Error("MetamaskController - No HD Key Tree found");for(;"0x0"!==o;)await a.addNewAccount(d),s=await a.getAccounts(),o=await this.getBalance(s[s.length-1],c);s.length>1&&"0x0"===o&&(await this.removeAccount(s[s.length-1]),s=await a.getAccounts());const h=this.preferencesController.getLedgerTransportPreference();return this.setLedgerTransportPreference(h),this.preferencesController.setAddresses(s),this.selectFirstIdentity(),l}finally{r()}}getBalance(e,t){return new Promise(((r,n)=>{const s=this.accountTracker.store.getState().accounts[e];s&&s.balance?r(s.balance):t.getBalance(e,((e,t)=>{e?(n(e),f.default.error(e)):r(t||"0x0")}))}))}async fetchInfoToSync(){const{currentLocale:e,frequentRpcList:t,identities:r,selectedAddress:n,useTokenDetection:s}=this.preferencesController.store.getState(),o=!s&&this.networkController.store.getState().provider.chainId===L.CHAIN_IDS.MAINNET,{tokenList:i}=this.tokenListController.state,a=o?z.STATIC_MAINNET_TOKEN_LIST:i,l={currentLocale:e,frequentRpcList:t,identities:r,selectedAddress:n},{allTokens:c,allIgnoredTokens:d}=this.tokensController.state,h={};Object.keys(c).forEach((e=>{h[e]={},Object.keys(c[e]).forEach((t=>{const r=(0,K.toChecksumHexAddress)(t);h[e][r]=c[e][r].filter((e=>{var t;if(e.isERC721===undefined){if(a[null===(t=e.address)||void 0===t?void 0:t.toLowerCase()]!==undefined)return!0}else if(!1===e.isERC721)return!0;return!1}))}))}));const[u]=this.keyringController.getKeyringsByType(U.HardwareKeyringTypes.hdKeyTree),p=this.keyringController.getKeyringsByType(U.HardwareKeyringTypes.hdKeyTree),g=await u.getAccounts(),f=(await Promise.all(p.map((e=>e.getAccounts())))).reduce(((e,t)=>[...e,...t]),[]),m={hd:g.filter(((e,t)=>g.indexOf(e)===t)).map((e=>(0,K.toChecksumHexAddress)(e))),simpleKeyPair:f.filter(((e,t)=>f.indexOf(e)===t)).map((e=>(0,K.toChecksumHexAddress)(e))),ledger:[],trezor:[],lattice:[]};let{transactions:y}=this.txController.store.getState();return y=Object.values(y).filter((e=>{const t=(0,K.toChecksumHexAddress)(e.txParams.from);return m.hd.includes(t)})),{accounts:m,preferences:l,transactions:y,tokens:{allTokens:h,allIgnoredTokens:d},network:this.networkController.store.getState()}}async submitPassword(e){await this.keyringController.submitPassword(e);try{await this.blockTracker.checkForLatestBlock()}catch(e){f.default.error("Error while unlocking extension.",e)}const t=this.preferencesController.getLedgerTransportPreference();return this.setLedgerTransportPreference(t),this.keyringController.fullUpdate()}async _loginUser(){try{var e;const t=null===(e={})||void 0===e?void 0:e.PASSWORD;t?await this.submitPassword(t):Q.isManifestV3&&await this.submitEncryptionKey(),await this.accountTracker._updateAccounts()}finally{this._startUISync()}}_startUISync(){this.emit("startUISync"),this.startUISync=!0,this.memStore.subscribe(this.sendUpdate.bind(this))}async submitEncryptionKey(){try{const{loginToken:e,loginSalt:t}=await I.default.storage.session.get(["loginToken","loginSalt"]);if(e&&t){const{vault:r}=this.keyringController.store.getState();if(r.salt!==t)return console.warn("submitEncryptionKey: Stored salt and vault salt do not match"),void await this.clearLoginArtifacts();await this.keyringController.submitEncryptionKey(e,t)}}catch(e){throw await this.clearLoginArtifacts(),e}}async clearLoginArtifacts(){await I.default.storage.session.remove(["loginToken","loginSalt"])}async verifyPassword(e){await this.keyringController.verifyPassword(e)}selectFirstIdentity(){const{identities:e}=this.preferencesController.store.getState(),[t]=Object.keys(e);this.preferencesController.setSelectedAddress(t)}getPrimaryKeyringMnemonic(){const[e]=this.keyringController.getKeyringsByType(U.HardwareKeyringTypes.hdKeyTree);if(!e.mnemonic)throw new Error("Primary keyring mnemonic unavailable.");return e.mnemonic}async getKeyringForDevice(e,t=null){let r=null;if(e!==U.HardwareDeviceNames.QR&&!this.canUseHardwareWallets())throw new Error("Hardware wallets are not supported on this version.");switch(e){case U.HardwareDeviceNames.trezor:r=m.default.type;break;case U.HardwareDeviceNames.ledger:r=y.default.type;break;case U.HardwareDeviceNames.qr:r=b.MetaMaskKeyring.type;break;case U.HardwareDeviceNames.lattice:r=w.default.type;break;default:throw new Error("MetamaskController:getKeyringForDevice - Unknown device")}let[n]=await this.keyringController.getKeyringsByType(r);if(n||(n=await this.keyringController.addNewKeyring(r)),t&&n.setHdPath&&n.setHdPath(t),e===U.HardwareDeviceNames.lattice&&(n.appName="MetaMask"),e===U.HardwareDeviceNames.trezor){const e=n.getModel();this.appStateController.setTrezorModel(e)}return n.network=this.networkController.getProviderConfig().type,n}async attemptLedgerTransportCreation(){const e=await this.getKeyringForDevice(U.HardwareDeviceNames.ledger);return await e.attemptMakeApp()}async establishLedgerTransportPreference(){const e=this.preferencesController.getLedgerTransportPreference();return await this.setLedgerTransportPreference(e)}async connectHardware(e,t,r){const n=await this.getKeyringForDevice(e,r);let s=[];switch(t){case-1:s=await n.getPreviousPage();break;case 1:s=await n.getNextPage();break;default:s=await n.getFirstPage()}const o=await this.keyringController.getAccounts(),i=[...new Set(o.concat(s.map((e=>e.address.toLowerCase()))))];return this.accountTracker.syncWithAddresses(i),s}async checkHardwareStatus(e,t){return(await this.getKeyringForDevice(e,t)).isUnlocked()}async forgetDevice(e){return(await this.getKeyringForDevice(e)).forgetDevice(),!0}async getAccountType(e){switch((await this.keyringController.getKeyringForAccount(e)).type){case U.HardwareKeyringTypes.trezor:case U.HardwareKeyringTypes.lattice:case U.HardwareKeyringTypes.qr:case U.HardwareKeyringTypes.ledger:return"hardware";case U.HardwareKeyringTypes.imported:return"imported";default:return"MetaMask"}}async getDeviceModel(e){const t=await this.keyringController.getKeyringForAccount(e);switch(t.type){case U.HardwareKeyringTypes.trezor:return t.getModel();case U.HardwareKeyringTypes.qr:return t.getName();case U.HardwareKeyringTypes.ledger:return U.HardwareDeviceNames.ledger;case U.HardwareKeyringTypes.lattice:return U.HardwareDeviceNames.lattice;default:return"N/A"}}getAccountLabel(e,t,r){return`${e[0].toUpperCase()}${e.slice(1)} ${parseInt(t,10)+1} ${r||""}`.trim()}async unlockHardwareWalletAccount(e,t,r,n){const s=await this.getKeyringForDevice(t,r);s.setAccountToUnlock(e);const o=await this.keyringController.getAccounts(),i=await this.keyringController.addNewAccount(s),a=await this.keyringController.getAccounts();this.preferencesController.setAddresses(a),a.forEach((r=>{if(!o.includes(r)){const o=this.getAccountLabel(t===U.HardwareDeviceNames.qr?s.getName():t,e,n);this.preferencesController.setAccountLabel(r,o),this.preferencesController.setSelectedAddress(r)}}));const{identities:l}=this.preferencesController.store.getState();return{...i,identities:l}}async addNewAccount(e){const[t]=this.keyringController.getKeyringsByType(U.HardwareKeyringTypes.hdKeyTree);if(!t)throw new Error("MetamaskController - No HD Key Tree found");const{keyringController:r}=this,{identities:n}=this.preferencesController.store.getState();if(Object.keys(n).length===e){const e=await r.getAccounts(),n=await r.addNewAccount(t),s=await r.getAccounts();await this.verifySeedPhrase(),this.preferencesController.setAddresses(s),s.forEach((t=>{e.includes(t)||this.preferencesController.setSelectedAddress(t)}));const{identities:o}=this.preferencesController.store.getState();return{...n,identities:o}}return{...r.memStore.getState(),identities:n}}async verifySeedPhrase(){const[e]=this.keyringController.getKeyringsByType(U.HardwareKeyringTypes.hdKeyTree);if(!e)throw new Error("MetamaskController - No HD Key Tree found");const t=await e.serialize(),r=n.from(t.mnemonic),s=await e.getAccounts();if(s.length<1)throw new Error("MetamaskController - No accounts found");try{return await Ae.default.verifyAccounts(s,r),Array.from(r.values())}catch(e){throw f.default.error(e.message),e}}async resetAccount(){const e=this.preferencesController.getSelectedAddress();return this.txController.wipeTransactions(e),this.networkController.resetConnection(),e}async getPermittedAccounts(e,{suppressUnauthorizedError:t=!0}={}){try{return await this.permissionController.executeRestrictedMethod(e,F.RestrictedMethods.eth_accounts)}catch(e){if(t&&e.code===p.errorCodes.provider.unauthorized)return[];throw e}}removeAllAccountPermissions(e){this.permissionController.updatePermissionsByCaveat(F.CaveatTypes.restrictReturnedAccounts,(t=>Ne.CaveatMutatorFactories[F.CaveatTypes.restrictReturnedAccounts].removeAccount(e,t)))}async removeAccount(e){this.removeAllAccountPermissions(e),this.preferencesController.removeAddress(e),this.accountTracker.removeAccount([e]);const t=await this.keyringController.getKeyringForAccount(e);await this.keyringController.removeAccount(e);const r=t?await t.getAccounts():{};var n;0===(null==r?void 0:r.length)&&(null===(n=t.destroy)||void 0===n||n.call(t));return e}async importAccountWithStrategy(e,t){const r=await Se.default.importAccount(e,t),n=await this.keyringController.addNewKeyring(U.HardwareKeyringTypes.imported,[r]),[s]=await n.getAccounts(),o=await this.keyringController.getAccounts();this.preferencesController.setAddresses(o),this.preferencesController.setSelectedAddress(s)}async newUnapprovedTransaction(e,t){return await this.txController.newUnapprovedTransaction(e,t)}async newUnsignedMessage(e,t){const r=(0,ye.normalizeMsgData)(e.data);let n;if(66!==r.length&&67!==r.length)throw p.ethErrors.rpc.invalidParams("eth_sign requires 32 byte message hash");return n=this.messageManager.addUnapprovedMessageAsync(e,t),this.sendUpdate(),this.opts.showUserConfirmation(),await n}async signMessage(e){f.default.info("MetaMaskController - signMessage");const t=e.metamaskId;try{const r=await this.messageManager.approveMessage(e),n=await this.keyringController.signMessage(r);return this.messageManager.setMsgStatusSigned(t,n),this.getState()}catch(e){throw f.default.info("MetaMaskController - eth_sign failed",e),this.messageManager.errorMessage(t,e),e}}cancelMessage(e){const{messageManager:t}=this;return t.rejectMsg(e),this.getState()}async newUnsignedPersonalMessage(e,t){const r=this.personalMessageManager.addUnapprovedMessageAsync(e,t);return this.sendUpdate(),this.opts.showUserConfirmation(),r}async signPersonalMessage(e){f.default.info("MetaMaskController - signPersonalMessage");const t=e.metamaskId;try{const r=await this.personalMessageManager.approveMessage(e),n=await this.keyringController.signPersonalMessage(r);return this.personalMessageManager.setMsgStatusSigned(t,n),this.getState()}catch(e){throw f.default.info("MetaMaskController - eth_personalSign failed",e),this.personalMessageManager.errorMessage(t,e),e}}cancelPersonalMessage(e){return this.personalMessageManager.rejectMsg(e),this.getState()}async newRequestDecryptMessage(e,t){const r=this.decryptMessageManager.addUnapprovedMessageAsync(e,t);return this.sendUpdate(),this.opts.showUserConfirmation(),r}async decryptMessageInline(e){f.default.info("MetaMaskController - decryptMessageInline");const t=e.metamaskId,r=this.decryptMessageManager.getMsg(t);try{const t=(0,K.stripHexPrefix)(e.data),s=n.from(t,"hex");e.data=JSON.parse(s.toString("utf8")),r.rawData=await this.keyringController.decryptMessage(e)}catch(e){r.error=e.message}return this.decryptMessageManager._updateMsg(r),this.getState()}async decryptMessage(e){f.default.info("MetaMaskController - decryptMessage");const t=e.metamaskId;try{const r=await this.decryptMessageManager.approveMessage(e),s=(0,K.stripHexPrefix)(r.data),o=n.from(s,"hex");r.data=JSON.parse(o.toString("utf8"));const i=await this.keyringController.decryptMessage(r);this.decryptMessageManager.setMsgStatusDecrypted(t,i)}catch(e){f.default.info("MetaMaskController - eth_decrypt failed.",e),this.decryptMessageManager.errorMessage(t,e)}return this.getState()}cancelDecryptMessage(e){return this.decryptMessageManager.rejectMsg(e),this.getState()}async newRequestEncryptionPublicKey(e,t){const r=e;switch((await this.keyringController.getKeyringForAccount(r)).type){case U.HardwareKeyringTypes.ledger:return new Promise(((e,t)=>{t(new Error("Ledger does not support eth_getEncryptionPublicKey."))}));case U.HardwareKeyringTypes.trezor:return new Promise(((e,t)=>{t(new Error("Trezor does not support eth_getEncryptionPublicKey."))}));case U.HardwareKeyringTypes.lattice:return new Promise(((e,t)=>{t(new Error("Lattice does not support eth_getEncryptionPublicKey."))}));case U.HardwareKeyringTypes.qr:return Promise.reject(new Error("QR hardware does not support eth_getEncryptionPublicKey."));default:{const r=this.encryptionPublicKeyManager.addUnapprovedMessageAsync(e,t);return this.sendUpdate(),this.opts.showUserConfirmation(),r}}}async encryptionPublicKey(e){f.default.info("MetaMaskController - encryptionPublicKey");const t=e.metamaskId;try{const r=await this.encryptionPublicKeyManager.approveMessage(e),n=await this.keyringController.getEncryptionPublicKey(r.data);this.encryptionPublicKeyManager.setMsgStatusReceived(t,n)}catch(e){f.default.info("MetaMaskController - eth_getEncryptionPublicKey failed.",e),this.encryptionPublicKeyManager.errorMessage(t,e)}return this.getState()}cancelEncryptionPublicKey(e){return this.encryptionPublicKeyManager.rejectMsg(e),this.getState()}newUnsignedTypedMessage(e,t,r){const n=this.typedMessageManager.addUnapprovedMessageAsync(e,t,r);return this.sendUpdate(),this.opts.showUserConfirmation(),n}async signTypedMessage(e){f.default.info("MetaMaskController - eth_signTypedData");const t=e.metamaskId,{version:r}=e;try{const n=await this.typedMessageManager.approveMessage(e);"V1"!==r&&"string"==typeof n.data&&(n.data=JSON.parse(n.data));const s=await this.keyringController.signTypedMessage(n,{version:r});return this.typedMessageManager.setMsgStatusSigned(t,s),this.getState()}catch(e){throw f.default.info("MetaMaskController - eth_signTypedData failed.",e),this.typedMessageManager.errorMessage(t,e),e}}cancelTypedMessage(e){return this.typedMessageManager.rejectMsg(e),this.getState()}async getCurrentAccountEIP1559Compatibility(){return!0}async createCancelTransaction(e,t,r){await this.txController.createCancelTransaction(e,t,r);return this.getState()}async createSpeedUpTransaction(e,t,r){await this.txController.createSpeedUpTransaction(e,t,r);return this.getState()}estimateGas(e){return new Promise(((t,r)=>this.txController.txGasUtil.query.estimateGas(e,((e,n)=>e?r(e):t(n.toString(16))))))}markPasswordForgotten(){this.preferencesController.setPasswordForgotten(!0),this.sendUpdate()}unMarkPasswordForgotten(){this.preferencesController.setPasswordForgotten(!1),this.sendUpdate()}setupUntrustedCommunication({connectionStream:e,sender:t,subjectType:r}){const{usePhishDetect:n}=this.preferencesController.store.getState();let s;if(s=r||(t.id&&t.id!==this.extension.runtime.id?j.SubjectType.Extension:j.SubjectType.Website),t.url){const{hostname:r}=new URL(t.url);this.phishingController.maybeUpdatePhishingLists();const s=this.phishingController.test(r);if(n&&null!=s&&s.result)return void this.sendPhishingWarning(e,r,s)}const o=(0,ae.setupMultiplex)(e);this.setupProviderConnection(o.createStream("metamask-provider"),t,s),t.url&&this.setupPublicConfig(o.createStream("publicConfig"))}setupTrustedCommunication(e,t){const r=(0,ae.setupMultiplex)(e);this.setupControllerConnection(r.createStream("controller")),this.setupProviderConnection(r.createStream("provider"),t,j.SubjectType.Internal)}setupPhishingCommunication({connectionStream:e}){const{usePhishDetect:t}=this.preferencesController.store.getState();if(!t)return;const r=(0,ae.setupMultiplex)(e).createStream("metamask-phishing-safelist");r.on("data",(0,Pe.default)({safelistPhishingDomain:this.safelistPhishingDomain.bind(this)},r))}sendPhishingWarning(e,t,r){const n=x.PHISHING_NEW_ISSUE_URLS[null==r?void 0:r.name];(0,ae.setupMultiplex)(e).createStream("phishing").write({hostname:t,newIssueUrl:n})}setupControllerConnection(e){const t=this.getApi();this.activeControllerConnections+=1,this.emit("controllerConnectionChanged",this.activeControllerConnections),e.on("data",(0,Pe.default)(t,e,this.store,this.localStoreApiWrapper));const r=t=>{e._writableState.ended||e.write({jsonrpc:"2.0",method:"sendUpdate",params:[t]})};this.on("update",r);const n=()=>{e._writableState.ended||e.write({jsonrpc:"2.0",method:"startUISync"})};this.startUISync?n():this.once("startUISync",n),e.on("end",(()=>{this.activeControllerConnections-=1,this.emit("controllerConnectionChanged",this.activeControllerConnections),this.removeListener("update",r)}))}setupProviderConnection(e,t,r){let n,s;n=r===j.SubjectType.Internal?q.ORIGIN_METAMASK:new URL(t.url).origin,t.id&&t.id!==this.extension.runtime.id&&this.subjectMetadataController.addSubjectMetadata({origin:n,extensionId:t.id,subjectType:j.SubjectType.Extension}),t.tab&&t.tab.id&&(s=t.tab.id);const i=this.setupProviderEngine({origin:n,sender:t,subjectType:r,tabId:s}),a=(0,d.default)({engine:i}),l=this.addConnection(n,{engine:i});(0,o.default)(e,a,e,(e=>{i._middleware.forEach((e=>{e.destroy&&"function"==typeof e.destroy&&e.destroy()})),l&&this.removeConnection(n,l),e&&f.default.error(e)}))}setupProviderEngine({origin:e,subjectType:t,sender:r,tabId:n}){const{provider:s}=this,o=new l.JsonRpcEngine;return s.on("data",((e,t)=>{if(e)throw e;o.emit("notification",t)})),Q.isManifestV3&&o.push((0,te.default)()),o.push((0,se.default)({origin:e})),n&&o.push((0,oe.default)({tabId:n})),o.push((0,re.default)({origin:e})),o.push(this.permissionLogController.createMiddleware()),o.push((0,Ie.default)({trackEvent:this.metaMetricsController.trackEvent.bind(this.metaMetricsController),getMetricsState:this.metaMetricsController.store.getState.bind(this.metaMetricsController.store)})),t===j.SubjectType.Website&&o.push((0,ie.default)({location:r.url,registerOnboarding:this.onboardingController.registerOnboarding})),o.push((0,ne.createMethodMiddleware)({origin:e,subjectType:t,addSubjectMetadata:this.subjectMetadataController.addSubjectMetadata.bind(this.subjectMetadataController),getProviderState:this.getProviderState.bind(this),getUnlockPromise:this.appStateController.getUnlockPromise.bind(this.appStateController),handleWatchAssetRequest:this.tokensController.watchAsset.bind(this.tokensController),requestUserApproval:this.approvalController.addAndShowApprovalRequest.bind(this.approvalController),sendMetrics:this.metaMetricsController.trackEvent.bind(this.metaMetricsController),getAccounts:this.getPermittedAccounts.bind(this,e),getPermissionsForOrigin:this.permissionController.getPermissions.bind(this.permissionController,e),hasPermission:this.permissionController.hasPermission.bind(this.permissionController,e),requestAccountsPermission:this.permissionController.requestPermissions.bind(this.permissionController,{origin:e},{eth_accounts:{}}),requestPermissionsForOrigin:this.permissionController.requestPermissions.bind(this.permissionController,{origin:e}),addCustomRpc:async({chainId:e,blockExplorerUrl:t,ticker:r,chainName:n,rpcUrl:s}={})=>{await this.preferencesController.upsertToFrequentRpcList(s,e,r,n,{blockExplorerUrl:t})},findCustomRpcBy:this.findCustomRpcBy.bind(this),getCurrentChainId:this.networkController.getCurrentChainId.bind(this.networkController),getCurrentRpcUrl:this.networkController.getCurrentRpcUrl.bind(this.networkController),setProviderType:this.networkController.setProviderType.bind(this.networkController),updateRpcTarget:({rpcUrl:e,chainId:t,ticker:r,nickname:n})=>{this.networkController.setRpcTarget(e,t,r,n)},getWeb3ShimUsageState:this.alertController.getWeb3ShimUsageState.bind(this.alertController),setWeb3ShimUsageRecorded:this.alertController.setWeb3ShimUsageRecorded.bind(this.alertController)})),t!==j.SubjectType.Internal&&o.push(this.permissionController.createPermissionMiddleware({origin:e})),o.push(this.metamaskMiddleware),o.push((0,h.providerAsMiddleware)(s)),o}setupPublicConfig(e){const t=(0,a.storeAsStream)(this.publicConfigStore);(0,o.default)(t,e,(e=>{t.destroy(),e&&f.default.error(e)}))}addConnection(e,{engine:t}){if(e===q.ORIGIN_METAMASK)return null;this.connections[e]||(this.connections[e]={});const r=(0,k.default)();return this.connections[e][r]={engine:t},r}removeConnection(e,t){const r=this.connections[e];r&&(delete r[t],0===Object.keys(r).length&&delete this.connections[e])}removeAllConnections(e){const t=this.connections[e];t&&Object.keys(t).forEach((t=>{this.removeConnection(e,t)}))}notifyConnections(e,t){const r=this.connections[e];r&&Object.values(r).forEach((e=>{e.engine&&e.engine.emit("notification",t)}))}notifyAllConnections(e){const t="function"==typeof e?t=>e(t):()=>e;Object.keys(this.connections).forEach((e=>{Object.values(this.connections[e]).forEach((async r=>{r.engine&&r.engine.emit("notification",await t(e))}))}))}async _onKeyringControllerUpdate(e){const{keyrings:t,encryptionKey:r,encryptionSalt:n}=e,s=t.reduce(((e,{accounts:t})=>e.concat(t)),[]);Q.isManifestV3&&await I.default.storage.session.set({loginToken:r,loginSalt:n}),s.length&&(this.preferencesController.syncAddresses(s),this.accountTracker.syncWithAddresses(s))}_onUnlock(){this.notifyAllConnections((async e=>({method:Ne.NOTIFICATION_NAMES.unlockStateChanged,params:{isUnlocked:!0,accounts:await this.getPermittedAccounts(e)}}))),this.emit("unlock")}_onLock(){this.notifyAllConnections({method:Ne.NOTIFICATION_NAMES.unlockStateChanged,params:{isUnlocked:!1}}),this.emit("lock")}_onStateUpdate(e){this.isClientOpenAndUnlocked=e.isUnlocked&&this._isClientOpen,this.notifyAllConnections({method:Ne.NOTIFICATION_NAMES.chainChanged,params:this.getProviderNetworkState(e)})}privateSendUpdate(){this.emit("update",this.getState())}isUnlocked(){return this.keyringController.memStore.getState().isUnlocked}getExternalPendingTransactions(e){return this.smartTransactionsController.getTransactions({addressFrom:e,status:"pending"})}async getPendingNonce(e){const{nonceDetails:t,releaseLock:r}=await this.txController.nonceTracker.getNonceLock(e),n=t.params.highestSuggested;return r(),n}async getNextNonce(e){const t=await this.txController.nonceTracker.getNonceLock(e);return t.releaseLock(),t.nextNonce}async updateAndSetCustomRpc(e,t,r="ETH",n,s){return this.networkController.setRpcTarget(e,t,r,n,s),await this.preferencesController.upsertToFrequentRpcList(e,t,r,n,s),e}async setCustomRpc(e,t,r="ETH",n="",s={}){const o=this.preferencesController.getFrequentRpcListDetail().find((t=>e===t.rpcUrl));return o?this.networkController.setRpcTarget(o.rpcUrl,o.chainId,o.ticker,o.nickname,s):(this.networkController.setRpcTarget(e,t,r,n,s),await this.preferencesController.upsertToFrequentRpcList(e,t,r,n,s)),e}async delCustomRpc(e){await this.preferencesController.removeFromFrequentRpcList(e)}findCustomRpcBy(e){const t=this.preferencesController.getFrequentRpcListDetail();for(const r of t)for(const t of Object.keys(e))if(r[t]===e[t])return r;return null}async setLedgerTransportPreference(e){if(!this.canUseHardwareWallets())return undefined;const t=this.preferencesController.getLedgerTransportPreference(),r=this.preferencesController.setLedgerTransportPreference(e),n=await this.getKeyringForDevice(U.HardwareDeviceNames.ledger);return null!=n&&n.updateTransportMethod?n.updateTransportMethod(r).catch((e=>{throw this.preferencesController.setLedgerTransportPreference(t),e})):undefined}recordFirstTimeInfo(e){if(!("firstTimeInfo"in e)){const t=this.platform.getVersion();e.firstTimeInfo={version:t,date:Date.now()}}}set isClientOpen(e){this._isClientOpen=e,this.detectTokensController.isOpen=e}onClientClosed(){try{this.gasFeeController.stopPolling(),this.appStateController.clearPollingTokens()}catch(e){console.error(e)}}onEnvironmentTypeClosed(e){const t=q.POLLING_TOKEN_ENVIRONMENT_TYPES[e];this.appStateController.store.getState()[t].forEach((e=>{this.gasFeeController.disconnectPoller(e),this.appStateController.removePollingToken(e,t)}))}safelistPhishingDomain(e){return this.phishingController.bypass(e)}setLocked(){var e;const[t]=this.keyringController.getKeyringsByType(U.HardwareKeyringTypes.trezor);t&&t.dispose();const[r]=this.keyringController.getKeyringsByType(U.HardwareKeyringTypes.ledger);return null==r||null===(e=r.destroy)||void 0===e||e.call(r),Q.isManifestV3&&this.clearLoginArtifacts(),this.keyringController.setLocked()}async securityProviderRequest(e,t){const{currentLocale:r,transactionSecurityCheckEnabled:n}=this.preferencesController.store.getState(),s=Number((0,Y.hexToDecimal)(this.networkController.getCurrentChainId()));if(n)try{return await(0,Re.securityProviderCheck)(e,t,s,r)}catch(e){throw f.default.error(e.message),e}return null}}r.default=Fe}).call(this)}).call(this,e("_process"),e("buffer").Buffer)}}},{package:"$root$",file:"app\\scripts\\metamask-controller.js"}],[89,{lodash:2730},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n=e("lodash");var s={version:2,migrate(e){const t=(0,n.cloneDeep)(e);t.meta.version=2;try{"etherscan"===t.data.config.provider.type&&(t.data.config.provider.type="rpc",t.data.config.provider.rpcTarget="https://rpc.metamask.io/")}catch(e){}return Promise.resolve(t)}};r.default=s}}},{package:"$root$",file:"app\\scripts\\migrations\\002.js"}],[9,{"../../../shared/modules/string-utils":3295},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n=e("../../../shared/modules/string-utils");r.default=class{constructor(e={}){const{preferencesController:t,addressBookController:r,trackMetaMetricsEvent:n}=e;this.preferencesController=t,this.addressBookController=r,this._trackMetaMetricsEvent=n}async restoreUserData(e){const t=this.preferencesController.store.getState(),{preferences:r,addressBook:n}=JSON.parse(e);r&&(r.identities=t.identities,r.lostIdentities=t.lostIdentities,r.selectedAddress=t.selectedAddress,this.preferencesController.store.updateState(r)),n&&this.addressBookController.update(n,!0),r&&n&&this._trackMetaMetricsEvent({event:"User Data Imported",category:"Backup"})}async backupUserData(){const e={preferences:{...this.preferencesController.store.getState()},addressBook:{...this.addressBookController.state}};delete e.preferences.identities,delete e.preferences.lostIdentities,delete e.preferences.selectedAddress;const t=JSON.stringify(e),r=new Date,s=e=>(0,n.prependZero)(e,2);return{fileName:`MetaMaskUserData.${r.getFullYear()}_${s(r.getMonth()+1)}_${s(r.getDay())}_${s(r.getHours())}_${s(r.getMinutes())}_${s(r.getDay())}.json`,data:t}}}}}},{package:"$root$",file:"app\\scripts\\controllers\\backup.js"}],[90,{lodash:2730},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n=e("lodash");var s={version:3,migrate(e){const t=(0,n.cloneDeep)(e);t.meta.version=3;try{"https://rawtestrpc.metamask.io/"===t.data.config.provider.rpcTarget&&(t.data.config.provider.rpcTarget="https://testrpc.metamask.io/")}catch(e){}return Promise.resolve(t)}};r.default=s}}},{package:"$root$",file:"app\\scripts\\migrations\\003.js"}],[91,{lodash:2730},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n=e("lodash");var s={version:4,migrate(e){const t=(0,n.cloneDeep)(e);t.meta.version=4;try{if("rpc"!==t.data.config.provider.type)return Promise.resolve(t);switch(t.data.config.provider.rpcTarget){case"https://testrpc.metamask.io/":t.data.config.provider={type:"testnet"};break;case"https://rpc.metamask.io/":t.data.config.provider={type:"mainnet"}}}catch(e){}return Promise.resolve(t)}};r.default=s}}},{package:"$root$",file:"app\\scripts\\migrations\\004.js"}],[92,{lodash:2730},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n=e("lodash");var s={version:5,migrate(e){const t=(0,n.cloneDeep)(e);t.meta.version=5;try{const e=function(e){const{config:t}=e,r={...e,KeyringController:{vault:e.vault,selectedAccount:t.selectedAccount,walletNicknames:e.walletNicknames}};return delete r.vault,delete r.walletNicknames,delete r.config.selectedAccount,r}(t.data);t.data=e}catch(e){console.warn(`MetaMask Migration #5${e.stack}`)}return Promise.resolve(t)}};r.default=s}}},{package:"$root$",file:"app\\scripts\\migrations\\005.js"}],[929,{"@metamask/base-controller":934,"@metamask/controller-utils":971},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.AddressBookController=void 0;const n=e("@metamask/controller-utils"),s=e("@metamask/base-controller");class o extends s.BaseController{constructor(e,t){super(e,t),this.name="AddressBookController",this.defaultState={addressBook:{}},this.initialize()}clear(){this.update({addressBook:{}})}delete(e,t){if(t=(0,n.toChecksumHexAddress)(t),!(0,n.isValidHexAddress)(t)||!this.state.addressBook[e]||!this.state.addressBook[e][t])return!1;const r=Object.assign({},this.state.addressBook);return delete r[e][t],0===Object.keys(r[e]).length&&delete r[e],this.update({addressBook:r}),!0}set(e,t,r="1",s=""){if(e=(0,n.toChecksumHexAddress)(e),!(0,n.isValidHexAddress)(e))return!1;const o={address:e,chainId:r,isEns:!1,memo:s,name:t},i=(0,n.normalizeEnsName)(t);return i&&(o.name=i,o.isEns=!0),this.update({addressBook:Object.assign(Object.assign({},this.state.addressBook),{[r]:Object.assign(Object.assign({},this.state.addressBook[r]),{[e]:o})})}),!0}}r.AddressBookController=o,r.default=o}}},{package:"@metamask/address-book-controller",file:"node_modules\\@metamask\\address-book-controller\\dist\\AddressBookController.js"}],[93,{lodash:2730},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n=e("lodash");var s={version:6,migrate(e){const t=(0,n.cloneDeep)(e);t.meta.version=6;try{const e=function(e){const t=e.KeyringController,r={...e,PreferencesController:{selectedAddress:t.selectedAccount}};return delete r.KeyringController.selectedAccount,r}(t.data);t.data=e}catch(e){console.warn(`MetaMask Migration #6${e.stack}`)}return Promise.resolve(t)}};r.default=s}}},{package:"$root$",file:"app\\scripts\\migrations\\006.js"}],[930,{"./AddressBookController":929},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){var n=this&&this.__createBinding||(Object.create?function(e,t,r,n){n===undefined&&(n=r);var s=Object.getOwnPropertyDescriptor(t,r);s&&!("get"in s?!t.__esModule:s.writable||s.configurable)||(s={enumerable:!0,get:function(){return t[r]}}),Object.defineProperty(e,n,s)}:function(e,t,r,n){n===undefined&&(n=r),e[n]=t[r]}),s=this&&this.__exportStar||function(e,t){for(var r in e)"default"===r||Object.prototype.hasOwnProperty.call(t,r)||n(t,e,r)};Object.defineProperty(r,"__esModule",{value:!0}),s(e("./AddressBookController"),r)}}},{package:"@metamask/address-book-controller",file:"node_modules\\@metamask\\address-book-controller\\dist\\index.js"}],[931,{},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.BaseController=void 0;class n{constructor(e={},t={}){this.defaultConfig={},this.defaultState={},this.disabled=!1,this.name="BaseController",this.internalConfig=this.defaultConfig,this.internalState=this.defaultState,this.internalListeners=[],this.initialState=t,this.initialConfig=e}initialize(){return this.internalState=this.defaultState,this.internalConfig=this.defaultConfig,this.configure(this.initialConfig),this.update(this.initialState),this}get config(){return this.internalConfig}get state(){return this.internalState}configure(e,t=!1,r=!0){if(r){this.internalConfig=t?e:Object.assign(this.internalConfig,e);for(const e in this.internalConfig)void 0!==this.internalConfig[e]&&(this[e]=this.internalConfig[e])}else for(const t in e)void 0!==this.internalConfig[t]&&(this.internalConfig[t]=e[t],this[t]=e[t])}notify(){this.disabled||this.internalListeners.forEach((e=>{e(this.internalState)}))}subscribe(e){this.internalListeners.push(e)}unsubscribe(e){const t=this.internalListeners.findIndex((t=>e===t));return t>-1&&this.internalListeners.splice(t,1),t>-1}update(e,t=!1){this.internalState=t?Object.assign({},e):Object.assign({},this.internalState,e),this.notify()}}r.BaseController=n,r.default=n}}},{package:"@metamask/address-book-controller>@metamask/base-controller",file:"node_modules\\@metamask\\address-book-controller\\node_modules\\@metamask\\base-controller\\dist\\BaseController.js"}],[932,{immer:2469},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.getPersistentState=r.getAnonymizedState=r.BaseController=void 0;const n=e("immer");(0,n.enablePatches)();function s(e,t,r){return Object.keys(e).reduce(((n,s)=>{const o=t[s][r],i=e[s];return"function"==typeof o?n[s]=o(i):o&&(n[s]=i),n}),{})}r.BaseController=class{constructor({messenger:e,metadata:t,name:r,state:n}){this.messagingSystem=e,this.name=r,this.internalState=n,this.metadata=t,this.messagingSystem.registerActionHandler(`${r}:getState`,(()=>this.state))}get state(){return this.internalState}set state(e){throw new Error("Controller state cannot be directly mutated; use 'update' method instead.")}update(e){const[t,r]=n.produceWithPatches(this.internalState,e);this.internalState=t,this.messagingSystem.publish(`${this.name}:stateChange`,t,r)}destroy(){this.messagingSystem.clearEventSubscriptions(`${this.name}:stateChange`)}},r.getAnonymizedState=function(e,t){return s(e,t,"anonymous")},r.getPersistentState=function(e,t){return s(e,t,"persist")}}}},{package:"@metamask/address-book-controller>@metamask/base-controller",file:"node_modules\\@metamask\\address-book-controller\\node_modules\\@metamask\\base-controller\\dist\\BaseControllerV2.js"}],[933,{},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.ControllerMessenger=r.RestrictedControllerMessenger=void 0;class n{constructor({controllerMessenger:e,name:t,allowedActions:r,allowedEvents:n}){this.controllerMessenger=e,this.controllerName=t,this.allowedActions=r||null,this.allowedEvents=n||null}registerActionHandler(e,t){if(!e.startsWith(`${this.controllerName}:`))throw new Error(`Only allowed registering action handlers prefixed by '${this.controllerName}:'`);this.controllerMessenger.registerActionHandler(e,t)}unregisterActionHandler(e){if(!e.startsWith(`${this.controllerName}:`))throw new Error(`Only allowed unregistering action handlers prefixed by '${this.controllerName}:'`);this.controllerMessenger.unregisterActionHandler(e)}call(e,...t){if(null===this.allowedActions)throw new Error("No actions allowed");if(!this.allowedActions.includes(e))throw new Error(`Action missing from allow list: ${e}`);return this.controllerMessenger.call(e,...t)}publish(e,...t){if(!e.startsWith(`${this.controllerName}:`))throw new Error(`Only allowed publishing events prefixed by '${this.controllerName}:'`);this.controllerMessenger.publish(e,...t)}subscribe(e,t,r){if(null===this.allowedEvents)throw new Error("No events allowed");if(!this.allowedEvents.includes(e))throw new Error(`Event missing from allow list: ${e}`);return r?this.controllerMessenger.subscribe(e,t,r):this.controllerMessenger.subscribe(e,t)}unsubscribe(e,t){if(null===this.allowedEvents)throw new Error("No events allowed");if(!this.allowedEvents.includes(e))throw new Error(`Event missing from allow list: ${e}`);this.controllerMessenger.unsubscribe(e,t)}clearEventSubscriptions(e){if(!e.startsWith(`${this.controllerName}:`))throw new Error(`Only allowed clearing events prefixed by '${this.controllerName}:'`);this.controllerMessenger.clearEventSubscriptions(e)}}r.RestrictedControllerMessenger=n;r.ControllerMessenger=class{constructor(){this.actions=new Map,this.events=new Map,this.eventPayloadCache=new Map}registerActionHandler(e,t){if(this.actions.has(e))throw new Error(`A handler for ${e} has already been registered`);this.actions.set(e,t)}unregisterActionHandler(e){this.actions.delete(e)}clearActions(){this.actions.clear()}call(e,...t){const r=this.actions.get(e);if(!r)throw new Error(`A handler for ${e} has not been registered`);return r(...t)}publish(e,...t){const r=this.events.get(e);if(r)for(const[e,n]of r.entries())if(n){const r=this.eventPayloadCache.get(e),s=n(...t);s!==r&&(this.eventPayloadCache.set(e,s),e(s,r))}else e(...t)}subscribe(e,t,r){let n=this.events.get(e);n||(n=new Map,this.events.set(e,n)),n.set(t,r)}unsubscribe(e,t){const r=this.events.get(e);if(!r||!r.has(t))throw new Error(`Subscription not found for event: ${e}`);r.get(t)&&this.eventPayloadCache.delete(t),r.delete(t)}clearEventSubscriptions(e){this.events.delete(e)}clearSubscriptions(){this.events.clear()}getRestricted({name:e,allowedActions:t,allowedEvents:r}){return new n({controllerMessenger:this,name:e,allowedActions:t,allowedEvents:r})}}}}},{package:"@metamask/address-book-controller>@metamask/base-controller",file:"node_modules\\@metamask\\address-book-controller\\node_modules\\@metamask\\base-controller\\dist\\ControllerMessenger.js"}],[934,{"./BaseController":931,"./BaseControllerV2":932,"./ControllerMessenger":933},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){var n=this&&this.__createBinding||(Object.create?function(e,t,r,n){n===undefined&&(n=r);var s=Object.getOwnPropertyDescriptor(t,r);s&&!("get"in s?!t.__esModule:s.writable||s.configurable)||(s={enumerable:!0,get:function(){return t[r]}}),Object.defineProperty(e,n,s)}:function(e,t,r,n){n===undefined&&(n=r),e[n]=t[r]}),s=this&&this.__exportStar||function(e,t){for(var r in e)"default"===r||Object.prototype.hasOwnProperty.call(t,r)||n(t,e,r)};Object.defineProperty(r,"__esModule",{value:!0}),r.getPersistentState=r.getAnonymizedState=r.BaseControllerV2=r.BaseController=void 0;var o=e("./BaseController");Object.defineProperty(r,"BaseController",{enumerable:!0,get:function(){return o.BaseController}});var i=e("./BaseControllerV2");Object.defineProperty(r,"BaseControllerV2",{enumerable:!0,get:function(){return i.BaseController}}),Object.defineProperty(r,"getAnonymizedState",{enumerable:!0,get:function(){return i.getAnonymizedState}}),Object.defineProperty(r,"getPersistentState",{enumerable:!0,get:function(){return i.getPersistentState}}),s(e("./ControllerMessenger"),r)}}},{package:"@metamask/address-book-controller>@metamask/base-controller",file:"node_modules\\@metamask\\address-book-controller\\node_modules\\@metamask\\base-controller\\dist\\index.js"}],[935,{"@metamask/base-controller":940},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.AnnouncementController=void 0;const n=e("@metamask/base-controller"),s={announcements:{}};class o extends n.BaseController{constructor(e,t){super(e,t||s),this.initialize(),this._addAnnouncements()}_addAnnouncements(){const e={},{allAnnouncements:t}=this.config;Object.values(t).forEach((t=>{e[t.id]=this.state.announcements[t.id]?this.state.announcements[t.id]:Object.assign(Object.assign({},t),{isShown:!1})})),this.update({announcements:e})}updateViewed(e){const t=this.state.announcements;for(const r of Object.keys(e).map(Number))t[r].isShown=e[r];this.update({announcements:t},!0)}}r.AnnouncementController=o}}},{package:"@metamask/announcement-controller",file:"node_modules\\@metamask\\announcement-controller\\dist\\AnnouncementController.js"}],[936,{"./AnnouncementController":935},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){var n=this&&this.__createBinding||(Object.create?function(e,t,r,n){n===undefined&&(n=r);var s=Object.getOwnPropertyDescriptor(t,r);s&&!("get"in s?!t.__esModule:s.writable||s.configurable)||(s={enumerable:!0,get:function(){return t[r]}}),Object.defineProperty(e,n,s)}:function(e,t,r,n){n===undefined&&(n=r),e[n]=t[r]}),s=this&&this.__exportStar||function(e,t){for(var r in e)"default"===r||Object.prototype.hasOwnProperty.call(t,r)||n(t,e,r)};Object.defineProperty(r,"__esModule",{value:!0}),s(e("./AnnouncementController"),r)}}},{package:"@metamask/announcement-controller",file:"node_modules\\@metamask\\announcement-controller\\dist\\index.js"}],[937,{},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.BaseController=void 0;class n{constructor(e={},t={}){this.defaultConfig={},this.defaultState={},this.disabled=!1,this.name="BaseController",this.internalConfig=this.defaultConfig,this.internalState=this.defaultState,this.internalListeners=[],this.initialState=t,this.initialConfig=e}initialize(){return this.internalState=this.defaultState,this.internalConfig=this.defaultConfig,this.configure(this.initialConfig),this.update(this.initialState),this}get config(){return this.internalConfig}get state(){return this.internalState}configure(e,t=!1,r=!0){if(r){this.internalConfig=t?e:Object.assign(this.internalConfig,e);for(const e in this.internalConfig)void 0!==this.internalConfig[e]&&(this[e]=this.internalConfig[e])}else for(const t in e)void 0!==this.internalConfig[t]&&(this.internalConfig[t]=e[t],this[t]=e[t])}notify(){this.disabled||this.internalListeners.forEach((e=>{e(this.internalState)}))}subscribe(e){this.internalListeners.push(e)}unsubscribe(e){const t=this.internalListeners.findIndex((t=>e===t));return t>-1&&this.internalListeners.splice(t,1),t>-1}update(e,t=!1){this.internalState=t?Object.assign({},e):Object.assign({},this.internalState,e),this.notify()}}r.BaseController=n,r.default=n}}},{package:"@metamask/announcement-controller>@metamask/base-controller",file:"node_modules\\@metamask\\announcement-controller\\node_modules\\@metamask\\base-controller\\dist\\BaseController.js"}],[938,{immer:2469},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.getPersistentState=r.getAnonymizedState=r.BaseController=void 0;const n=e("immer");(0,n.enablePatches)();function s(e,t,r){return Object.keys(e).reduce(((n,s)=>{const o=t[s][r],i=e[s];return"function"==typeof o?n[s]=o(i):o&&(n[s]=i),n}),{})}r.BaseController=class{constructor({messenger:e,metadata:t,name:r,state:n}){this.messagingSystem=e,this.name=r,this.internalState=n,this.metadata=t,this.messagingSystem.registerActionHandler(`${r}:getState`,(()=>this.state))}get state(){return this.internalState}set state(e){throw new Error("Controller state cannot be directly mutated; use 'update' method instead.")}update(e){const[t,r]=n.produceWithPatches(this.internalState,e);this.internalState=t,this.messagingSystem.publish(`${this.name}:stateChange`,t,r)}destroy(){this.messagingSystem.clearEventSubscriptions(`${this.name}:stateChange`)}},r.getAnonymizedState=function(e,t){return s(e,t,"anonymous")},r.getPersistentState=function(e,t){return s(e,t,"persist")}}}},{package:"@metamask/announcement-controller>@metamask/base-controller",file:"node_modules\\@metamask\\announcement-controller\\node_modules\\@metamask\\base-controller\\dist\\BaseControllerV2.js"}],[939,{},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.ControllerMessenger=r.RestrictedControllerMessenger=void 0;class n{constructor({controllerMessenger:e,name:t,allowedActions:r,allowedEvents:n}){this.controllerMessenger=e,this.controllerName=t,this.allowedActions=r||null,this.allowedEvents=n||null}registerActionHandler(e,t){if(!e.startsWith(`${this.controllerName}:`))throw new Error(`Only allowed registering action handlers prefixed by '${this.controllerName}:'`);this.controllerMessenger.registerActionHandler(e,t)}unregisterActionHandler(e){if(!e.startsWith(`${this.controllerName}:`))throw new Error(`Only allowed unregistering action handlers prefixed by '${this.controllerName}:'`);this.controllerMessenger.unregisterActionHandler(e)}call(e,...t){if(null===this.allowedActions)throw new Error("No actions allowed");if(!this.allowedActions.includes(e))throw new Error(`Action missing from allow list: ${e}`);return this.controllerMessenger.call(e,...t)}publish(e,...t){if(!e.startsWith(`${this.controllerName}:`))throw new Error(`Only allowed publishing events prefixed by '${this.controllerName}:'`);this.controllerMessenger.publish(e,...t)}subscribe(e,t,r){if(null===this.allowedEvents)throw new Error("No events allowed");if(!this.allowedEvents.includes(e))throw new Error(`Event missing from allow list: ${e}`);return r?this.controllerMessenger.subscribe(e,t,r):this.controllerMessenger.subscribe(e,t)}unsubscribe(e,t){if(null===this.allowedEvents)throw new Error("No events allowed");if(!this.allowedEvents.includes(e))throw new Error(`Event missing from allow list: ${e}`);this.controllerMessenger.unsubscribe(e,t)}clearEventSubscriptions(e){if(!e.startsWith(`${this.controllerName}:`))throw new Error(`Only allowed clearing events prefixed by '${this.controllerName}:'`);this.controllerMessenger.clearEventSubscriptions(e)}}r.RestrictedControllerMessenger=n;r.ControllerMessenger=class{constructor(){this.actions=new Map,this.events=new Map,this.eventPayloadCache=new Map}registerActionHandler(e,t){if(this.actions.has(e))throw new Error(`A handler for ${e} has already been registered`);this.actions.set(e,t)}unregisterActionHandler(e){this.actions.delete(e)}clearActions(){this.actions.clear()}call(e,...t){const r=this.actions.get(e);if(!r)throw new Error(`A handler for ${e} has not been registered`);return r(...t)}publish(e,...t){const r=this.events.get(e);if(r)for(const[e,n]of r.entries())if(n){const r=this.eventPayloadCache.get(e),s=n(...t);s!==r&&(this.eventPayloadCache.set(e,s),e(s,r))}else e(...t)}subscribe(e,t,r){let n=this.events.get(e);n||(n=new Map,this.events.set(e,n)),n.set(t,r)}unsubscribe(e,t){const r=this.events.get(e);if(!r||!r.has(t))throw new Error(`Subscription not found for event: ${e}`);r.get(t)&&this.eventPayloadCache.delete(t),r.delete(t)}clearEventSubscriptions(e){this.events.delete(e)}clearSubscriptions(){this.events.clear()}getRestricted({name:e,allowedActions:t,allowedEvents:r}){return new n({controllerMessenger:this,name:e,allowedActions:t,allowedEvents:r})}}}}},{package:"@metamask/announcement-controller>@metamask/base-controller",file:"node_modules\\@metamask\\announcement-controller\\node_modules\\@metamask\\base-controller\\dist\\ControllerMessenger.js"}],[94,{lodash:2730},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n=e("lodash");var s={version:7,migrate(e){const t=(0,n.cloneDeep)(e);t.meta.version=7;try{const e=function(e){const t={...e,TransactionManager:{transactions:e.transactions||[],gasMultiplier:e.gasMultiplier||1}};return delete t.transactions,delete t.gasMultiplier,t}(t.data);t.data=e}catch(e){console.warn(`MetaMask Migration #7${e.stack}`)}return Promise.resolve(t)}};r.default=s}}},{package:"$root$",file:"app\\scripts\\migrations\\007.js"}],[940,{"./BaseController":937,"./BaseControllerV2":938,"./ControllerMessenger":939},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){var n=this&&this.__createBinding||(Object.create?function(e,t,r,n){n===undefined&&(n=r);var s=Object.getOwnPropertyDescriptor(t,r);s&&!("get"in s?!t.__esModule:s.writable||s.configurable)||(s={enumerable:!0,get:function(){return t[r]}}),Object.defineProperty(e,n,s)}:function(e,t,r,n){n===undefined&&(n=r),e[n]=t[r]}),s=this&&this.__exportStar||function(e,t){for(var r in e)"default"===r||Object.prototype.hasOwnProperty.call(t,r)||n(t,e,r)};Object.defineProperty(r,"__esModule",{value:!0}),r.getPersistentState=r.getAnonymizedState=r.BaseControllerV2=r.BaseController=void 0;var o=e("./BaseController");Object.defineProperty(r,"BaseController",{enumerable:!0,get:function(){return o.BaseController}});var i=e("./BaseControllerV2");Object.defineProperty(r,"BaseControllerV2",{enumerable:!0,get:function(){return i.BaseController}}),Object.defineProperty(r,"getAnonymizedState",{enumerable:!0,get:function(){return i.getAnonymizedState}}),Object.defineProperty(r,"getPersistentState",{enumerable:!0,get:function(){return i.getPersistentState}}),s(e("./ControllerMessenger"),r)}}},{package:"@metamask/announcement-controller>@metamask/base-controller",file:"node_modules\\@metamask\\announcement-controller\\node_modules\\@metamask\\base-controller\\dist\\index.js"}],[941,{"./errors":942,"@metamask/base-controller":966,"eth-rpc-errors":1970,nanoid:944},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.ApprovalController=void 0;const n=e("eth-rpc-errors"),s=e("nanoid"),o=e("@metamask/base-controller"),i=e("./errors"),a="ApprovalController",l={pendingApprovals:{persist:!1,anonymous:!0},pendingApprovalCount:{persist:!1,anonymous:!1}};class c extends o.BaseControllerV2{constructor({messenger:e,showApprovalRequest:t,state:r={}}){super({name:a,metadata:l,messenger:e,state:Object.assign(Object.assign({},{pendingApprovals:{},pendingApprovalCount:0}),r)}),this._approvals=new Map,this._origins=new Map,this._showApprovalRequest=t,this.registerMessageHandlers()}registerMessageHandlers(){this.messagingSystem.registerActionHandler(`${a}:clearRequests`,this.clear.bind(this)),this.messagingSystem.registerActionHandler(`${a}:addRequest`,((e,t)=>t?this.addAndShowApprovalRequest(e):this.add(e))),this.messagingSystem.registerActionHandler(`${a}:hasRequest`,this.has.bind(this)),this.messagingSystem.registerActionHandler(`${a}:acceptRequest`,this.accept.bind(this)),this.messagingSystem.registerActionHandler(`${a}:rejectRequest`,this.reject.bind(this))}addAndShowApprovalRequest(e){const t=this._add(e.origin,e.type,e.id,e.requestData);return this._showApprovalRequest(),t}add(e){return this._add(e.origin,e.type,e.id,e.requestData)}get(e){return this.state.pendingApprovals[e]}getApprovalCount(e={}){var t,r;if(!e.origin&&!e.type)throw new Error("Must specify origin, type, or both.");const{origin:n,type:s}=e;if(n&&s)return Number(Boolean(null===(t=this._origins.get(n))||void 0===t?void 0:t.has(s)));if(n)return(null===(r=this._origins.get(n))||void 0===r?void 0:r.size)||0;let o=0;for(const e of Object.values(this.state.pendingApprovals))e.type===s&&(o+=1);return o}getTotalApprovalCount(){return this.state.pendingApprovalCount}has(e={}){var t;const{id:r,origin:n,type:s}=e;if(r){if("string"!=typeof r)throw new Error("May not specify non-string id.");return this._approvals.has(r)}if(s&&"string"!=typeof s)throw new Error("May not specify non-string type.");if(n){if("string"!=typeof n)throw new Error("May not specify non-string origin.");return s?Boolean(null===(t=this._origins.get(n))||void 0===t?void 0:t.has(s)):this._origins.has(n)}if(s){for(const e of Object.values(this.state.pendingApprovals))if(e.type===s)return!0;return!1}throw new Error("Must specify a valid combination of id, origin, and type.")}accept(e,t){this._deleteApprovalAndGetCallbacks(e).resolve(t)}reject(e,t){this._deleteApprovalAndGetCallbacks(e).reject(t)}clear(e){for(const t of this._approvals.keys())this.reject(t,e);this._origins.clear(),this.update((()=>({pendingApprovals:{},pendingApprovalCount:0})))}_add(e,t,r=(0,s.nanoid)(),o){var i;if(this._validateAddParams(r,e,t,o),null===(i=this._origins.get(e))||void 0===i?void 0:i.has(t))throw n.ethErrors.rpc.resourceUnavailable(((e,t)=>`Request of type '${t}' already pending for origin ${e}. Please wait.`)(e,t));return new Promise(((n,s)=>{this._approvals.set(r,{resolve:n,reject:s}),this._addPendingApprovalOrigin(e,t),this._addToStore(r,e,t,o)}))}_validateAddParams(e,t,r,s){let o=null;if(e&&"string"==typeof e?this._approvals.has(e)?o=`Approval request with id '${e}' already exists.`:t&&"string"==typeof t?r&&"string"==typeof r?s&&("object"!=typeof s||Array.isArray(s))&&(o="Request data must be a plain object if specified."):o="Must specify non-empty string type.":o="Must specify non-empty string origin.":o="Must specify non-empty string id.",o)throw n.ethErrors.rpc.internal(o)}_addPendingApprovalOrigin(e,t){const r=this._origins.get(e)||new Set;r.add(t),this._origins.has(e)||this._origins.set(e,r)}_addToStore(e,t,r,n){const s={id:e,origin:t,type:r,time:Date.now(),requestData:n||null};this.update((t=>{t.pendingApprovals[e]=s,t.pendingApprovalCount=Object.keys(t.pendingApprovals).length}))}_delete(e){this._approvals.delete(e);const{origin:t,type:r}=this.state.pendingApprovals[e];this._origins.get(t).delete(r),this._isEmptyOrigin(t)&&this._origins.delete(t),this.update((t=>{delete t.pendingApprovals[e],t.pendingApprovalCount=Object.keys(t.pendingApprovals).length}))}_deleteApprovalAndGetCallbacks(e){const t=this._approvals.get(e);if(!t)throw new i.ApprovalRequestNotFoundError(e);return this._delete(e),t}_isEmptyOrigin(e){var t;return!(null===(t=this._origins.get(e))||void 0===t?void 0:t.size)}}r.ApprovalController=c,r.default=c}}},{package:"@metamask/approval-controller",file:"node_modules\\@metamask\\approval-controller\\dist\\ApprovalController.js"}],[942,{},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.ApprovalRequestNotFoundError=void 0;class n extends Error{constructor(e){super(`Approval request with id '${e}' not found.`)}}r.ApprovalRequestNotFoundError=n}}},{package:"@metamask/approval-controller",file:"node_modules\\@metamask\\approval-controller\\dist\\errors.js"}],[943,{"./ApprovalController":941,"./errors":942},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){var n=this&&this.__createBinding||(Object.create?function(e,t,r,n){n===undefined&&(n=r);var s=Object.getOwnPropertyDescriptor(t,r);s&&!("get"in s?!t.__esModule:s.writable||s.configurable)||(s={enumerable:!0,get:function(){return t[r]}}),Object.defineProperty(e,n,s)}:function(e,t,r,n){n===undefined&&(n=r),e[n]=t[r]}),s=this&&this.__exportStar||function(e,t){for(var r in e)"default"===r||Object.prototype.hasOwnProperty.call(t,r)||n(t,e,r)};Object.defineProperty(r,"__esModule",{value:!0}),s(e("./ApprovalController"),r),s(e("./errors"),r)}}},{package:"@metamask/approval-controller",file:"node_modules\\@metamask\\approval-controller\\dist\\index.js"}],[944,{"./url-alphabet/index.cjs":945},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){let{urlAlphabet:n}=e("./url-alphabet/index.cjs"),s=e=>crypto.getRandomValues(new Uint8Array(e)),o=(e,t,r)=>{let n=(2<<Math.log(e.length-1)/Math.LN2)-1,s=-~(1.6*n*t/e.length);return(o=t)=>{let i="";for(;;){let t=r(s),a=s;for(;a--;)if(i+=e[t[a]&n]||"",i.length===o)return i}}};t.exports={nanoid:(e=21)=>crypto.getRandomValues(new Uint8Array(e)).reduce(((e,t)=>e+=(t&=63)<36?t.toString(36):t<62?(t-26).toString(36).toUpperCase():t>62?"-":"_"),""),customAlphabet:(e,t=21)=>o(e,t,s),customRandom:o,urlAlphabet:n,random:s}}}},{package:"@metamask/approval-controller>nanoid",file:"node_modules\\@metamask\\approval-controller\\node_modules\\nanoid\\index.browser.cjs"}],[945,{},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){t.exports={urlAlphabet:"useandom-26T198340PX75pxJACKVERYMINDBUSHWOLF_GQZbfghjklqvwyzrict"}}}},{package:"@metamask/approval-controller>nanoid",file:"node_modules\\@metamask\\approval-controller\\node_modules\\nanoid\\url-alphabet\\index.cjs"}],[95,{lodash:2730},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n=e("lodash");var s={version:8,migrate(e){const t=(0,n.cloneDeep)(e);t.meta.version=8;try{const e=function(e){const t={...e,NoticeController:{noticesList:e.noticesList||[]}};return delete t.noticesList,t}(t.data);t.data=e}catch(e){console.warn(`MetaMask Migration #8${e.stack}`)}return Promise.resolve(t)}};r.default=s}}},{package:"$root$",file:"app\\scripts\\migrations\\008.js"}],[96,{lodash:2730},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n=e("lodash");var s={version:9,migrate(e){const t=(0,n.cloneDeep)(e);t.meta.version=9;try{const e=function(e){const t=(0,n.merge)({},e,{CurrencyController:{currentCurrency:e.currentFiat||e.fiatCurrency||"USD",conversionRate:e.conversionRate,conversionDate:e.conversionDate}});return delete t.currentFiat,delete t.fiatCurrency,delete t.conversionRate,delete t.conversionDate,t}(t.data);t.data=e}catch(e){console.warn(`MetaMask Migration #9${e.stack}`)}return Promise.resolve(t)}};r.default=s}}},{package:"$root$",file:"app\\scripts\\migrations\\009.js"}],[967,{buffer:1739},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){(function(e){(function(){Object.defineProperty(r,"__esModule",{value:!0}),r.generateSalt=r.serializeBufferForStorage=r.serializeBufferFromStorage=r.keyFromPassword=r.exportKey=r.importKey=r.decryptWithKey=r.decryptWithDetail=r.decrypt=r.encryptWithKey=r.encryptWithDetail=r.encrypt=void 0;const t="AES-GCM",n="utf-8";async function s(e,t,r,n=d()){const s=r||await c(e,n),i=await o(s,t);return i.salt=n,JSON.stringify(i)}async function o(r,s){const o=JSON.stringify(s),i=e.from(o,n),a=global.crypto.getRandomValues(new Uint8Array(16)),l=await global.crypto.subtle.encrypt({name:t,iv:a},r,i),c=new Uint8Array(l),d=e.from(a).toString("base64");return{data:e.from(c).toString("base64"),iv:d}}async function i(e,t,r){const n=JSON.parse(t),{salt:s}=n,o=r||await c(e,s);return await a(o,n)}async function a(r,s){const o=e.from(s.data,"base64"),i=e.from(s.iv,"base64");let a;try{const s=await crypto.subtle.decrypt({name:t,iv:i},r,o),l=new Uint8Array(s),c=e.from(l).toString(n);a=JSON.parse(c)}catch(e){throw new Error("Incorrect password")}return a}async function l(e){const t=await window.crypto.subtle.exportKey("jwk",e);return JSON.stringify(t)}async function c(r,s,o=!1){const i=e.from(r,n),a=e.from(s,"base64"),l=await global.crypto.subtle.importKey("raw",i,{name:"PBKDF2"},!1,["deriveBits","deriveKey"]);return await global.crypto.subtle.deriveKey({name:"PBKDF2",salt:a,iterations:1e4,hash:"SHA-256"},l,{name:t,length:256},o,["encrypt","decrypt"])}function d(e=32){const t=new Uint8Array(e);global.crypto.getRandomValues(t);return btoa(String.fromCharCode.apply(null,t))}r.encrypt=s,r.encryptWithDetail=async function(e,t,r=d()){const n=await c(e,r,!0),o=await l(n);return{vault:await s(e,t,n,r),exportedKeyString:o}},r.encryptWithKey=o,r.decrypt=i,r.decryptWithDetail=async function(e,t){const r=JSON.parse(t),{salt:n}=r,s=await c(e,n,!0);return{exportedKeyString:await l(s),vault:await i(e,t,s),salt:n}},r.decryptWithKey=a,r.importKey=async function(e){return await window.crypto.subtle.importKey("jwk",JSON.parse(e),t,!0,["encrypt","decrypt"])},r.exportKey=l,r.keyFromPassword=c,r.serializeBufferFromStorage=function(e){const t="0x"===e.slice(0,2)?e.slice(2):e,r=new Uint8Array(t.length/2);for(let e=0;e<t.length;e+=2){const n=t.substr(e,2);r[e/2]=parseInt(n,16)}return r},r.serializeBufferForStorage=function(e){let t="0x";return e.forEach((e=>{t+=function(e){let t=e.toString(16);for(;t.length<2;)t=`0${t}`;return t}(e)})),t},r.generateSalt=d}).call(this)}).call(this,e("buffer").Buffer)}}},{package:"@metamask/rpc-methods>@metamask/browser-passworder",file:"node_modules\\@metamask\\browser-passworder\\dist\\index.js"}],[97,{lodash:2730},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n=e("lodash");var s={version:10,migrate(e){const t=(0,n.cloneDeep)(e);t.meta.version=10;try{const e=function(e){const t=(0,n.merge)({},e,{ShapeShiftController:{shapeShiftTxList:e.shapeShiftTxList||[]}});return delete t.shapeShiftTxList,t}(t.data);t.data=e}catch(e){console.warn(`MetaMask Migration #10${e.stack}`)}return Promise.resolve(t)}};r.default=s}}},{package:"$root$",file:"app\\scripts\\migrations\\010.js"}],[974,{"@ethereumjs/util":313,"@metamask/eth-sig-util":1025,"@metamask/scure-bip39":1133,"@metamask/scure-bip39/dist/wordlists/english":1134,buffer:1739,"ethereum-cryptography/hdkey":980,"ethereum-cryptography/keccak":981,"ethereum-cryptography/utils":982},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){(function(r){(function(){const{HDKey:n}=e("ethereum-cryptography/hdkey"),{keccak256:s}=e("ethereum-cryptography/keccak"),{bytesToHex:o}=e("ethereum-cryptography/utils"),{stripHexPrefix:i,privateToPublic:a,publicToAddress:l,ecsign:c,arrToBufArr:d,bufferToHex:h}=e("@ethereumjs/util"),u=e("@metamask/scure-bip39"),{wordlist:p}=e("@metamask/scure-bip39/dist/wordlists/english"),{concatSig:g,decrypt:f,getEncryptionPublicKey:m,normalize:y,personalSign:w,signTypedData:b,SignTypedDataVersion:C}=e("@metamask/eth-sig-util"),k="HD Key Tree";class v{constructor(e={}){this.type=k,this._wallets=[],this.deserialize(e)}generateRandomMnemonic(){this._initFromMnemonic(u.generateMnemonic(p))}_uint8ArrayToString(e){return Array.from(new Uint16Array(new Uint8Array(e).buffer)).map((e=>p[e])).join(" ")}_stringToUint8Array(e){const t=e.split(" ").map((e=>p.indexOf(e)));return new Uint8Array(new Uint16Array(t).buffer)}_mnemonicToUint8Array(e){let t=e;if(e&&e.type&&"Buffer"===e.type&&(t=e.data),"string"==typeof t||r.isBuffer(t)||Array.isArray(t)){let e=t;return Array.isArray(t)?e=r.from(t).toString():r.isBuffer(t)&&(e=t.toString()),this._stringToUint8Array(e)}return t instanceof Object&&!(t instanceof Uint8Array)?Uint8Array.from(Object.values(t)):t}serialize(){const e=this._uint8ArrayToString(this.mnemonic),t=new TextEncoder("utf-8").encode(e);return Promise.resolve({mnemonic:Array.from(t),numberOfAccounts:this._wallets.length,hdPath:this.hdPath})}deserialize(e={}){if(e.numberOfAccounts&&!e.mnemonic)throw new Error("Eth-Hd-Keyring: Deserialize method cannot be called with an opts value for numberOfAccounts and no menmonic");if(this.root)throw new Error("Eth-Hd-Keyring: Secret recovery phrase already provided");return this.opts=e,this._wallets=[],this.mnemonic=null,this.root=null,this.hdPath=e.hdPath||"m/44'/60'/0'/0",e.mnemonic&&this._initFromMnemonic(e.mnemonic),e.numberOfAccounts?this.addAccounts(e.numberOfAccounts):Promise.resolve([])}addAccounts(e=1){if(!this.root)throw new Error("Eth-Hd-Keyring: No secret recovery phrase provided");const t=this._wallets.length,r=[];for(let n=t;n<e+t;n++){const e=this.root.deriveChild(n);r.push(e),this._wallets.push(e)}const n=r.map((e=>this._addressfromPublicKey(e.publicKey)));return Promise.resolve(n)}getAccounts(){return this._wallets.map((e=>this._addressfromPublicKey(e.publicKey)))}async getAppKeyAddress(e,t){if(!t||"string"!=typeof t)throw new Error("'origin' must be a non-empty string");const r=this._getWalletForAccount(e,{withAppKeyOrigin:t});return y(l(r.publicKey).toString("hex"))}async exportAccount(e,t={}){const r=this._getWalletForAccount(e,t);return o(r.privateKey)}async signTransaction(e,t,r={}){const n=this._getPrivateKeyFor(e,r),s=t.sign(n);return s===undefined?t:s}async signMessage(e,t,n={}){const s=i(t),o=this._getPrivateKeyFor(e,n),a=c(r.from(s,"hex"),o);return g(a.v,a.r,a.s)}async signPersonalMessage(e,t,n={}){const s=this._getPrivateKeyFor(e,n),o=r.from(s,"hex");return w({privateKey:o,data:t})}async decryptMessage(e,t){const n=this._getWalletForAccount(e),{privateKey:s}=n,o=r.from(s).toString("hex");return f({privateKey:o,encryptedData:t})}async signTypedData(e,t,r={version:C.V1}){const n=Object.keys(C).includes(r.version)?r.version:C.V1,s=this._getPrivateKeyFor(e,r);return b({privateKey:s,data:t,version:n})}removeAccount(e){const t=y(e);if(!this._wallets.map((({publicKey:e})=>this._addressfromPublicKey(e))).includes(t))throw new Error(`Address ${t} not found in this keyring`);this._wallets=this._wallets.filter((({publicKey:e})=>this._addressfromPublicKey(e)!==t))}async getEncryptionPublicKey(e,t={}){const r=this._getPrivateKeyFor(e,t);return m(r)}_getPrivateKeyFor(e,t={}){if(!e)throw new Error("Must specify address.");return this._getWalletForAccount(e,t).privateKey}_getWalletForAccount(e,t={}){const n=y(e);let o=this._wallets.find((({publicKey:e})=>this._addressfromPublicKey(e)===n));if(!o)throw new Error("HD Keyring - Unable to find matching address.");if(t.withAppKeyOrigin){const{privateKey:e}=o,n=r.from(t.withAppKeyOrigin,"utf8"),i=r.concat([e,n]),l=d(s(i,256));o={privateKey:l,publicKey:a(l)}}return o}_initFromMnemonic(e){if(this.root)throw new Error("Eth-Hd-Keyring: Secret recovery phrase already provided");this.mnemonic=this._mnemonicToUint8Array(e);if(!u.validateMnemonic(this.mnemonic,p))throw new Error("Eth-Hd-Keyring: Invalid secret recovery phrase provided");const t=u.mnemonicToSeedSync(this.mnemonic,p);this.hdWallet=n.fromMasterSeed(t),this.root=this.hdWallet.derive(this.hdPath)}_addressfromPublicKey(e){return h(l(r.from(e),!0)).toLowerCase()}}v.type=k,t.exports=v}).call(this)}).call(this,e("buffer").Buffer)}}},{package:"@metamask/eth-keyring-controller>@metamask/eth-hd-keyring",file:"node_modules\\@metamask\\eth-hd-keyring\\index.js"}],[975,{},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){function n(e){if(!Number.isSafeInteger(e)||e<0)throw new Error(`Wrong positive integer: ${e}`)}function s(e){if("boolean"!=typeof e)throw new Error(`Expected boolean, not ${e}`)}function o(e,...t){if(!(e instanceof Uint8Array))throw new TypeError("Expected Uint8Array");if(t.length>0&&!t.includes(e.length))throw new TypeError(`Expected Uint8Array of length ${t}, not of length=${e.length}`)}function i(e){if("function"!=typeof e||"function"!=typeof e.create)throw new Error("Hash should be wrapped by utils.wrapConstructor");n(e.outputLen),n(e.blockLen)}function a(e,t=!0){if(e.destroyed)throw new Error("Hash instance has been destroyed");if(t&&e.finished)throw new Error("Hash#digest() has already been called")}function l(e,t){o(e);const r=t.outputLen;if(e.length<r)throw new Error(`digestInto() expects output buffer of length at least ${r}`)}Object.defineProperty(r,"__esModule",{value:!0}),r.output=r.exists=r.hash=r.bytes=r.bool=r.number=void 0,r.number=n,r.bool=s,r.bytes=o,r.hash=i,r.exists=a,r.output=l;const c={number:n,bool:s,bytes:o,hash:i,exists:a,output:l};r.default=c}}},{package:"@metamask/eth-keyring-controller>@metamask/eth-hd-keyring>ethereum-cryptography>@noble/hashes",file:"node_modules\\@metamask\\eth-hd-keyring\\node_modules\\@noble\\hashes\\_assert.js"}],[976,{},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.add=r.toBig=r.split=r.fromBig=void 0;const n=BigInt(2**32-1),s=BigInt(32);function o(e,t=!1){return t?{h:Number(e&n),l:Number(e>>s&n)}:{h:0|Number(e>>s&n),l:0|Number(e&n)}}function i(e,t=!1){let r=new Uint32Array(e.length),n=new Uint32Array(e.length);for(let s=0;s<e.length;s++){const{h:i,l:a}=o(e[s],t);[r[s],n[s]]=[i,a]}return[r,n]}r.fromBig=o,r.split=i;r.toBig=(e,t)=>BigInt(e>>>0)<<s|BigInt(t>>>0);function a(e,t,r,n){const s=(t>>>0)+(n>>>0);return{h:e+r+(s/2**32|0)|0,l:0|s}}r.add=a;const l={fromBig:o,split:i,toBig:r.toBig,shrSH:(e,t,r)=>e>>>r,shrSL:(e,t,r)=>e<<32-r|t>>>r,rotrSH:(e,t,r)=>e>>>r|t<<32-r,rotrSL:(e,t,r)=>e<<32-r|t>>>r,rotrBH:(e,t,r)=>e<<64-r|t>>>r-32,rotrBL:(e,t,r)=>e>>>r-32|t<<64-r,rotr32H:(e,t)=>t,rotr32L:(e,t)=>e,rotlSH:(e,t,r)=>e<<r|t>>>32-r,rotlSL:(e,t,r)=>t<<r|e>>>32-r,rotlBH:(e,t,r)=>t<<r-32|e>>>64-r,rotlBL:(e,t,r)=>e<<r-32|t>>>64-r,add:a,add3L:(e,t,r)=>(e>>>0)+(t>>>0)+(r>>>0),add3H:(e,t,r,n)=>t+r+n+(e/2**32|0)|0,add4L:(e,t,r,n)=>(e>>>0)+(t>>>0)+(r>>>0)+(n>>>0),add4H:(e,t,r,n,s)=>t+r+n+s+(e/2**32|0)|0,add5H:(e,t,r,n,s,o)=>t+r+n+s+o+(e/2**32|0)|0,add5L:(e,t,r,n,s)=>(e>>>0)+(t>>>0)+(r>>>0)+(n>>>0)+(s>>>0)};r.default=l}}},{package:"@metamask/eth-keyring-controller>@metamask/eth-hd-keyring>ethereum-cryptography>@noble/hashes",file:"node_modules\\@metamask\\eth-hd-keyring\\node_modules\\@noble\\hashes\\_u64.js"}],[977,{},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.crypto=void 0,r.crypto={node:undefined,web:"object"==typeof self&&"crypto"in self?self.crypto:undefined}}}},{package:"@metamask/eth-keyring-controller>@metamask/eth-hd-keyring>ethereum-cryptography>@noble/hashes",file:"node_modules\\@metamask\\eth-hd-keyring\\node_modules\\@noble\\hashes\\cryptoBrowser.js"}],[978,{"./_assert.js":975,"./_u64.js":976,"./utils.js":979},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.shake256=r.shake128=r.keccak_512=r.keccak_384=r.keccak_256=r.keccak_224=r.sha3_512=r.sha3_384=r.sha3_256=r.sha3_224=r.Keccak=r.keccakP=void 0;const n=e("./_assert.js"),s=e("./_u64.js"),o=e("./utils.js"),[i,a,l]=[[],[],[]],c=BigInt(0),d=BigInt(1),h=BigInt(2),u=BigInt(7),p=BigInt(256),g=BigInt(113);for(let e=0,t=d,r=1,n=0;e<24;e++){[r,n]=[n,(2*r+3*n)%5],i.push(2*(5*n+r)),a.push((e+1)*(e+2)/2%64);let s=c;for(let e=0;e<7;e++)t=(t<<d^(t>>u)*g)%p,t&h&&(s^=d<<(d<<BigInt(e))-d);l.push(s)}const[f,m]=s.default.split(l,!0),y=(e,t,r)=>r>32?s.default.rotlBH(e,t,r):s.default.rotlSH(e,t,r),w=(e,t,r)=>r>32?s.default.rotlBL(e,t,r):s.default.rotlSL(e,t,r);function b(e,t=24){const r=new Uint32Array(10);for(let n=24-t;n<24;n++){for(let t=0;t<10;t++)r[t]=e[t]^e[t+10]^e[t+20]^e[t+30]^e[t+40];for(let t=0;t<10;t+=2){const n=(t+8)%10,s=(t+2)%10,o=r[s],i=r[s+1],a=y(o,i,1)^r[n],l=w(o,i,1)^r[n+1];for(let r=0;r<50;r+=10)e[t+r]^=a,e[t+r+1]^=l}let t=e[2],s=e[3];for(let r=0;r<24;r++){const n=a[r],o=y(t,s,n),l=w(t,s,n),c=i[r];t=e[c],s=e[c+1],e[c]=o,e[c+1]=l}for(let t=0;t<50;t+=10){for(let n=0;n<10;n++)r[n]=e[t+n];for(let n=0;n<10;n++)e[t+n]^=~r[(n+2)%10]&r[(n+4)%10]}e[0]^=f[n],e[1]^=m[n]}r.fill(0)}r.keccakP=b;class C extends o.Hash{constructor(e,t,r,s=!1,i=24){if(super(),this.blockLen=e,this.suffix=t,this.outputLen=r,this.enableXOF=s,this.rounds=i,this.pos=0,this.posOut=0,this.finished=!1,this.destroyed=!1,n.default.number(r),0>=this.blockLen||this.blockLen>=200)throw new Error("Sha3 supports only keccak-f1600 function");this.state=new Uint8Array(200),this.state32=(0,o.u32)(this.state)}keccak(){b(this.state32,this.rounds),this.posOut=0,this.pos=0}update(e){n.default.exists(this);const{blockLen:t,state:r}=this,s=(e=(0,o.toBytes)(e)).length;for(let n=0;n<s;){const o=Math.min(t-this.pos,s-n);for(let t=0;t<o;t++)r[this.pos++]^=e[n++];this.pos===t&&this.keccak()}return this}finish(){if(this.finished)return;this.finished=!0;const{state:e,suffix:t,pos:r,blockLen:n}=this;e[r]^=t,0!=(128&t)&&r===n-1&&this.keccak(),e[n-1]^=128,this.keccak()}writeInto(e){n.default.exists(this,!1),n.default.bytes(e),this.finish();const t=this.state,{blockLen:r}=this;for(let n=0,s=e.length;n<s;){this.posOut>=r&&this.keccak();const o=Math.min(r-this.posOut,s-n);e.set(t.subarray(this.posOut,this.posOut+o),n),this.posOut+=o,n+=o}return e}xofInto(e){if(!this.enableXOF)throw new Error("XOF is not possible for this instance");return this.writeInto(e)}xof(e){return n.default.number(e),this.xofInto(new Uint8Array(e))}digestInto(e){if(n.default.output(e,this),this.finished)throw new Error("digest() was already called");return this.writeInto(e),this.destroy(),e}digest(){return this.digestInto(new Uint8Array(this.outputLen))}destroy(){this.destroyed=!0,this.state.fill(0)}_cloneInto(e){const{blockLen:t,suffix:r,outputLen:n,rounds:s,enableXOF:o}=this;return e||(e=new C(t,r,n,o,s)),e.state32.set(this.state32),e.pos=this.pos,e.posOut=this.posOut,e.finished=this.finished,e.rounds=s,e.suffix=r,e.outputLen=n,e.enableXOF=o,e.destroyed=this.destroyed,e}}r.Keccak=C;const k=(e,t,r)=>(0,o.wrapConstructor)((()=>new C(t,e,r)));r.sha3_224=k(6,144,28),r.sha3_256=k(6,136,32),r.sha3_384=k(6,104,48),r.sha3_512=k(6,72,64),r.keccak_224=k(1,144,28),r.keccak_256=k(1,136,32),r.keccak_384=k(1,104,48),r.keccak_512=k(1,72,64);const v=(e,t,r)=>(0,o.wrapConstructorWithOpts)(((n={})=>new C(t,e,n.dkLen===undefined?r:n.dkLen,!0)));r.shake128=v(31,168,16),r.shake256=v(31,136,32)}}},{package:"@metamask/eth-keyring-controller>@metamask/eth-hd-keyring>ethereum-cryptography>@noble/hashes",file:"node_modules\\@metamask\\eth-hd-keyring\\node_modules\\@noble\\hashes\\sha3.js"}],[979,{"@noble/hashes/crypto":977},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){
/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */
Object.defineProperty(r,"__esModule",{value:!0}),r.randomBytes=r.wrapConstructorWithOpts=r.wrapConstructor=r.checkOpts=r.Hash=r.concatBytes=r.toBytes=r.utf8ToBytes=r.asyncLoop=r.nextTick=r.hexToBytes=r.bytesToHex=r.isLE=r.rotr=r.createView=r.u32=r.u8=void 0;const n=e("@noble/hashes/crypto");r.u8=e=>new Uint8Array(e.buffer,e.byteOffset,e.byteLength);r.u32=e=>new Uint32Array(e.buffer,e.byteOffset,Math.floor(e.byteLength/4));r.createView=e=>new DataView(e.buffer,e.byteOffset,e.byteLength);if(r.rotr=(e,t)=>e<<32-t|e>>>t,r.isLE=68===new Uint8Array(new Uint32Array([287454020]).buffer)[0],!r.isLE)throw new Error("Non little-endian hardware is not supported");const s=Array.from({length:256},((e,t)=>t.toString(16).padStart(2,"0")));r.bytesToHex=function(e){if(!(e instanceof Uint8Array))throw new Error("Uint8Array expected");let t="";for(let r=0;r<e.length;r++)t+=s[e[r]];return t},r.hexToBytes=function(e){if("string"!=typeof e)throw new TypeError("hexToBytes: expected string, got "+typeof e);if(e.length%2)throw new Error("hexToBytes: received invalid unpadded hex");const t=new Uint8Array(e.length/2);for(let r=0;r<t.length;r++){const n=2*r,s=e.slice(n,n+2),o=Number.parseInt(s,16);if(Number.isNaN(o)||o<0)throw new Error("Invalid byte sequence");t[r]=o}return t};function o(e){if("string"!=typeof e)throw new TypeError("utf8ToBytes expected string, got "+typeof e);return(new TextEncoder).encode(e)}function i(e){if("string"==typeof e&&(e=o(e)),!(e instanceof Uint8Array))throw new TypeError(`Expected input type is Uint8Array (got ${typeof e})`);return e}r.nextTick=async()=>{},r.asyncLoop=async function(e,t,n){let s=Date.now();for(let o=0;o<e;o++){n(o);const e=Date.now()-s;e>=0&&e<t||(await(0,r.nextTick)(),s+=e)}},r.utf8ToBytes=o,r.toBytes=i,r.concatBytes=function(...e){if(!e.every((e=>e instanceof Uint8Array)))throw new Error("Uint8Array list expected");if(1===e.length)return e[0];const t=e.reduce(((e,t)=>e+t.length),0),r=new Uint8Array(t);for(let t=0,n=0;t<e.length;t++){const s=e[t];r.set(s,n),n+=s.length}return r};r.Hash=class{clone(){return this._cloneInto()}};r.checkOpts=function(e,t){if(t!==undefined&&("object"!=typeof t||(r=t,"[object Object]"!==Object.prototype.toString.call(r)||r.constructor!==Object)))throw new TypeError("Options should be object or undefined");var r;return Object.assign(e,t)},r.wrapConstructor=function(e){const t=t=>e().update(i(t)).digest(),r=e();return t.outputLen=r.outputLen,t.blockLen=r.blockLen,t.create=()=>e(),t},r.wrapConstructorWithOpts=function(e){const t=(t,r)=>e(r).update(i(t)).digest(),r=e({});return t.outputLen=r.outputLen,t.blockLen=r.blockLen,t.create=t=>e(t),t},r.randomBytes=function(e=32){if(n.crypto.web)return n.crypto.web.getRandomValues(new Uint8Array(e));if(n.crypto.node)return new Uint8Array(n.crypto.node.randomBytes(e).buffer);throw new Error("The environment doesn't have randomBytes function")}}}},{package:"@metamask/eth-keyring-controller>@metamask/eth-hd-keyring>ethereum-cryptography>@noble/hashes",file:"node_modules\\@metamask\\eth-hd-keyring\\node_modules\\@noble\\hashes\\utils.js"}],[98,{lodash:2730},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n=e("lodash");var s={version:11,migrate(e){const t=(0,n.cloneDeep)(e);t.meta.version=11;try{const e=function(e){const t=e;return delete t.TOSHash,delete t.isDisclaimerConfirmed,t}(t.data);t.data=e}catch(e){console.warn(`MetaMask Migration #11${e.stack}`)}return Promise.resolve(t)}};r.default=s}}},{package:"$root$",file:"app\\scripts\\migrations\\011.js"}],[980,{"@scure/bip32":1191},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.HDKey=r.HARDENED_OFFSET=void 0;var n=e("@scure/bip32");Object.defineProperty(r,"HARDENED_OFFSET",{enumerable:!0,get:function(){return n.HARDENED_OFFSET}}),Object.defineProperty(r,"HDKey",{enumerable:!0,get:function(){return n.HDKey}})}}},{package:"@metamask/eth-keyring-controller>@metamask/eth-hd-keyring>ethereum-cryptography",file:"node_modules\\@metamask\\eth-hd-keyring\\node_modules\\ethereum-cryptography\\hdkey.js"}],[981,{"./utils":982,"@noble/hashes/sha3":978},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.keccak512=r.keccak384=r.keccak256=r.keccak224=void 0;const n=e("@noble/hashes/sha3"),s=e("./utils");r.keccak224=(0,s.wrapHash)(n.keccak_224),r.keccak256=(()=>{const e=(0,s.wrapHash)(n.keccak_256);return e.create=n.keccak_256.create,e})(),r.keccak384=(0,s.wrapHash)(n.keccak_384),r.keccak512=(0,s.wrapHash)(n.keccak_512)}}},{package:"@metamask/eth-keyring-controller>@metamask/eth-hd-keyring>ethereum-cryptography",file:"node_modules\\@metamask\\eth-hd-keyring\\node_modules\\ethereum-cryptography\\keccak.js"}],[982,{"@noble/hashes/_assert":975,"@noble/hashes/utils":979},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){var n=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(r,"__esModule",{value:!0}),r.crypto=r.wrapHash=r.equalsBytes=r.hexToBytes=r.bytesToUtf8=r.utf8ToBytes=r.createView=r.concatBytes=r.toHex=r.bytesToHex=r.assertBytes=r.assertBool=void 0;const s=n(e("@noble/hashes/_assert")),o=e("@noble/hashes/utils"),i=s.default.bool;r.assertBool=i;const a=s.default.bytes;r.assertBytes=a;var l=e("@noble/hashes/utils");Object.defineProperty(r,"bytesToHex",{enumerable:!0,get:function(){return l.bytesToHex}}),Object.defineProperty(r,"toHex",{enumerable:!0,get:function(){return l.bytesToHex}}),Object.defineProperty(r,"concatBytes",{enumerable:!0,get:function(){return l.concatBytes}}),Object.defineProperty(r,"createView",{enumerable:!0,get:function(){return l.createView}}),Object.defineProperty(r,"utf8ToBytes",{enumerable:!0,get:function(){return l.utf8ToBytes}}),r.bytesToUtf8=function(e){if(!(e instanceof Uint8Array))throw new TypeError("bytesToUtf8 expected Uint8Array, got "+typeof e);return(new TextDecoder).decode(e)},r.hexToBytes=function(e){const t=e.startsWith("0x")?e.substring(2):e;return(0,o.hexToBytes)(t)},r.equalsBytes=function(e,t){if(e.length!==t.length)return!1;for(let r=0;r<e.length;r++)if(e[r]!==t[r])return!1;return!0},r.wrapHash=function(e){return t=>(s.default.bytes(t),e(t))},r.crypto=(()=>{const e="object"==typeof self&&"crypto"in self?self.crypto:undefined,r=void 0!==t&&"function"==typeof t.require&&t.require.bind(t);return{node:r&&!e?r("crypto"):undefined,web:e}})()}}},{package:"@metamask/eth-keyring-controller>@metamask/eth-hd-keyring>ethereum-cryptography",file:"node_modules\\@metamask\\eth-hd-keyring\\node_modules\\ethereum-cryptography\\utils.js"}],[983,{"./fetch-config-from-req":985,"./logging-utils":987,"eth-rpc-errors":1970,"json-rpc-engine":2500,"node-fetch":2790},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){var n=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(r,"__esModule",{value:!0}),r.createInfuraMiddleware=void 0;const s=e("json-rpc-engine"),o=e("eth-rpc-errors"),i=n(e("node-fetch")),a=e("./fetch-config-from-req"),l=e("./logging-utils"),c=(0,l.createModuleLogger)(l.projectLogger,"create-infura-middleware"),d=["Gateway timeout","ETIMEDOUT","ECONNRESET","SyntaxError"];async function h(e,t,r,n,s,l){const{fetchUrl:c,fetchParams:d}=(0,a.fetchConfigFromReq)({network:e,projectId:t,extraHeaders:r,req:n,source:l}),h=await(0,i.default)(c,d),p=await h.text();if(!h.ok)switch(h.status){case 405:throw o.ethErrors.rpc.methodNotFound();case 429:throw u("Request is being rate limited.");case 503:case 504:throw function(){let e="Gateway timeout. The request took too long to process. ";return e+="This can happen when querying logs over too wide a block range.",u(e)}();default:throw u(p)}if("eth_getBlockByNumber"===n.method&&"Not Found"===p)return void(s.result=null);const g=JSON.parse(p);s.result=g.result,s.error=g.error}function u(e){return o.ethErrors.rpc.internal(e)}function p(e){const t=e.toString();return d.some((e=>t.includes(e)))}function g(e){return new Promise((t=>{setTimeout(t,e)}))}r.createInfuraMiddleware=function({network:e="mainnet",maxAttempts:t=5,source:r,projectId:n,headers:o={}}){if(!n||"string"!=typeof n)throw new Error(`Invalid value for 'projectId': "${n}"`);if(!o||"object"!=typeof o)throw new Error(`Invalid value for 'headers': "${o}"`);if(!t)throw new Error(`Invalid value for 'maxAttempts': "${t}" (${typeof t})`);return(0,s.createAsyncMiddleware)((async(s,i)=>{for(let a=1;a<=t;a++)try{c("Attempting request to Infura. network = %o, projectId = %s, headers = %o, req = %o",e,n,o,s),await h(e,n,o,s,i,r);break}catch(e){if(!p(e))throw c("Non-retriable request error encountered. req = %o, res = %o, error = %o",s,i,e),e;if(!(t-a)){c("Retriable request error encountered, but exceeded max attempts. req = %o, res = %o, error = %o",s,i,e);const t=`InfuraProvider - cannot complete request. All retries exhausted.\nOriginal Error:\n${e.toString()}\n\n`;throw new Error(t)}c("Retriable request error encountered. req = %o, res = %o, error = %o",s,i,e),c("Waiting 1 second to try again..."),await g(1e3)}}))}}}},{package:"@metamask/eth-json-rpc-infura",file:"node_modules\\@metamask\\eth-json-rpc-infura\\dist\\create-infura-middleware.js"}],[984,{"./create-infura-middleware":983,"eth-json-rpc-middleware":993,"json-rpc-engine":2500},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.createProvider=void 0;const n=e("json-rpc-engine"),s=e("eth-json-rpc-middleware"),o=e("./create-infura-middleware");r.createProvider=function(e){const t=new n.JsonRpcEngine;return t.push((0,o.createInfuraMiddleware)(e)),(0,s.providerFromEngine)(t)}}}},{package:"@metamask/eth-json-rpc-infura",file:"node_modules\\@metamask\\eth-json-rpc-infura\\dist\\create-provider.js"}],[985,{},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){function n(e){return{id:e.id,jsonrpc:e.jsonrpc,method:e.method,params:e.params}}Object.defineProperty(r,"__esModule",{value:!0}),r.fetchConfigFromReq=void 0,r.fetchConfigFromReq=function({network:e,projectId:t,extraHeaders:r={},req:s,source:o}){const i=s.origin||"internal",a=Object.assign({},r,{Accept:"application/json","Content-Type":"application/json"});return o&&(a["Infura-Source"]=`${o}/${i}`),{fetchUrl:`https://${e}.infura.io/v3/${t}`,fetchParams:{method:"POST",headers:a,body:JSON.stringify(n(s))}}}}}},{package:"@metamask/eth-json-rpc-infura",file:"node_modules\\@metamask\\eth-json-rpc-infura\\dist\\fetch-config-from-req.js"}],[986,{"./create-infura-middleware":983,"./create-provider":984,"./fetch-config-from-req":985},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){var n=this&&this.__createBinding||(Object.create?function(e,t,r,n){n===undefined&&(n=r),Object.defineProperty(e,n,{enumerable:!0,get:function(){return t[r]}})}:function(e,t,r,n){n===undefined&&(n=r),e[n]=t[r]}),s=this&&this.__exportStar||function(e,t){for(var r in e)"default"===r||Object.prototype.hasOwnProperty.call(t,r)||n(t,e,r)};Object.defineProperty(r,"__esModule",{value:!0}),s(e("./create-infura-middleware"),r),s(e("./fetch-config-from-req"),r),s(e("./create-provider"),r)}}},{package:"@metamask/eth-json-rpc-infura",file:"node_modules\\@metamask\\eth-json-rpc-infura\\dist\\index.js"}],[987,{"@metamask/utils":1151},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.createModuleLogger=r.projectLogger=void 0;const n=e("@metamask/utils");Object.defineProperty(r,"createModuleLogger",{enumerable:!0,get:function(){return n.createModuleLogger}}),r.projectLogger=(0,n.createProjectLogger)("eth-json-rpc-infura")}}},{package:"@metamask/eth-json-rpc-infura",file:"node_modules\\@metamask\\eth-json-rpc-infura\\dist\\logging-utils.js"}],[988,{"./utils/cache":999,"json-rpc-engine":2500},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.createBlockCacheMiddleware=void 0;const n=e("json-rpc-engine"),s=e("./utils/cache"),o=[undefined,null,"<nil>"];class i{constructor(){this.cache={}}getBlockCacheForPayload(e,t){const r=Number.parseInt(t,16);let n=this.cache[r];if(!n){const e={};this.cache[r]=e,n=e}return n}async get(e,t){const r=this.getBlockCacheForPayload(e,t),n=(0,s.cacheIdentifierForPayload)(e,!0);return n?r[n]:undefined}async set(e,t,r){if(!this.canCacheResult(e,r))return;const n=(0,s.cacheIdentifierForPayload)(e,!0);if(!n)return;this.getBlockCacheForPayload(e,t)[n]=r}canCacheRequest(e){if(!(0,s.canCache)(e))return!1;return"pending"!==(0,s.blockTagForPayload)(e)}canCacheResult(e,t){return!o.includes(t)&&!(e.method&&["eth_getTransactionByHash","eth_getTransactionReceipt"].includes(e.method)&&(!t||!t.blockHash||"0x0000000000000000000000000000000000000000000000000000000000000000"===t.blockHash))}clearBefore(e){const t=Number.parseInt(e,16);Object.keys(this.cache).map(Number).filter((e=>e<t)).forEach((e=>delete this.cache[e]))}}r.createBlockCacheMiddleware=function({blockTracker:e}={}){if(!e)throw new Error("createBlockCacheMiddleware - No PollingBlockTracker specified");const t=new i,r={perma:t,block:t,fork:t};return(0,n.createAsyncMiddleware)((async(n,o,i)=>{if(n.skipCache)return i();const a=(0,s.cacheTypeForPayload)(n),l=r[a];if(!l)return i();if(!l.canCacheRequest(n))return i();let c,d=(0,s.blockTagForPayload)(n);if(d||(d="latest"),"earliest"===d)c="0x00";else if("latest"===d){const r=await e.getLatestBlock();t.clearBefore(r),c=r}else c=d;const h=await l.get(n,c);return h===undefined?(await i(),await l.set(n,c,o.result)):o.result=h,undefined}))}}}},{package:"@metamask/eth-json-rpc-infura>eth-json-rpc-middleware",file:"node_modules\\@metamask\\eth-json-rpc-infura\\node_modules\\eth-json-rpc-middleware\\dist\\block-cache.js"}],[989,{"./utils/cache":999,"json-rpc-engine":2500},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.createBlockRefRewriteMiddleware=void 0;const n=e("json-rpc-engine"),s=e("./utils/cache");r.createBlockRefRewriteMiddleware=function({blockTracker:e}={}){if(!e)throw Error('BlockRefRewriteMiddleware - mandatory "blockTracker" option is missing.');return(0,n.createAsyncMiddleware)((async(t,r,n)=>{var o;const i=(0,s.blockTagParamIndex)(t);if(i===undefined)return n();let a=null===(o=t.params)||void 0===o?void 0:o[i];if(a===undefined&&(a="latest"),"latest"!==a)return n();const l=await e.getLatestBlock();return t.params&&(t.params[i]=l),n()}))}}}},{package:"@metamask/eth-json-rpc-infura>eth-json-rpc-middleware",file:"node_modules\\@metamask\\eth-json-rpc-infura\\node_modules\\eth-json-rpc-middleware\\dist\\block-ref-rewrite.js"}],[99,{lodash:2730},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n=e("lodash");var s={version:12,migrate(e){const t=(0,n.cloneDeep)(e);t.meta.version=12;try{const e=function(e){const t=e;return t.NoticeController.noticesList.forEach((e=>{e.read&&(e.body="")})),t}(t.data);t.data=e}catch(e){console.warn(`MetaMask Migration #12${e.stack}`)}return Promise.resolve(t)}};r.default=s}}},{package:"$root$",file:"app\\scripts\\migrations\\012.js"}],[990,{"./utils/cache":999,clone:1776,"json-rpc-engine":2500,pify:1007},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){var n=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(r,"__esModule",{value:!0}),r.createBlockRefMiddleware=void 0;const s=e("json-rpc-engine"),o=n(e("clone")),i=n(e("pify")),a=e("./utils/cache");r.createBlockRefMiddleware=function({provider:e,blockTracker:t}={}){if(!e)throw Error('BlockRefMiddleware - mandatory "provider" option is missing.');if(!t)throw Error('BlockRefMiddleware - mandatory "blockTracker" option is missing.');return(0,s.createAsyncMiddleware)((async(r,n,s)=>{var l;const c=(0,a.blockTagParamIndex)(r);if(c===undefined)return s();let d=null===(l=r.params)||void 0===l?void 0:l[c];if(d===undefined&&(d="latest"),"latest"!==d)return s();const h=await t.getLatestBlock(),u=(0,o.default)(r);u.params&&(u.params[c]=h);const p=await(0,i.default)(e.sendAsync).call(e,u);return n.result=p.result,n.error=p.error,s()}))}}}},{package:"@metamask/eth-json-rpc-infura>eth-json-rpc-middleware",file:"node_modules\\@metamask\\eth-json-rpc-infura\\node_modules\\eth-json-rpc-middleware\\dist\\block-ref.js"}],[991,{"json-rpc-engine":2500},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.createBlockTrackerInspectorMiddleware=void 0;const n=e("json-rpc-engine"),s=["eth_getTransactionByHash","eth_getTransactionReceipt"];r.createBlockTrackerInspectorMiddleware=function({blockTracker:e}){return(0,n.createAsyncMiddleware)((async(t,r,n)=>{var o;if(!s.includes(t.method))return n();if(await n(),!(null===(o=r.result)||void 0===o?void 0:o.blockNumber))return undefined;if("string"==typeof r.result.blockNumber){Number.parseInt(r.result.blockNumber,16)>Number.parseInt(e.getCurrentBlock(),16)&&await e.checkForLatestBlock()}return undefined}))}}}},{package:"@metamask/eth-json-rpc-infura>eth-json-rpc-middleware",file:"node_modules\\@metamask\\eth-json-rpc-infura\\node_modules\\eth-json-rpc-middleware\\dist\\block-tracker-inspector.js"}],[992,{btoa:1738,"eth-rpc-errors":1970,"json-rpc-engine":2500,"node-fetch":1738},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.createFetchConfigFromReq=r.createFetchMiddleware=void 0;const n=e("json-rpc-engine"),s=e("eth-rpc-errors"),o=global.fetch||e("node-fetch"),i=global.btoa||e("btoa"),a=["Gateway timeout","ETIMEDOUT","failed to parse response body","Failed to fetch"];function l(e){switch(e.status){case 405:throw s.ethErrors.rpc.methodNotFound();case 418:throw s.ethErrors.rpc.internal({message:"Request is being rate limited."});case 503:case 504:throw function(){let e="Gateway timeout. The request took too long to process. ";return e+="This can happen when querying logs over too wide a block range.",s.ethErrors.rpc.internal({message:e})}()}}function c(e,t){if(200!==e.status)throw s.ethErrors.rpc.internal({message:`Non-200 status code: '${e.status}'`,data:t});if(t.error)throw s.ethErrors.rpc.internal({data:t.error});return t.result}function d({req:e,rpcUrl:t,originHttpHeaderKey:r}){const n=new URL(t),s=function(e){let t="";t+=e.protocol,t+=`//${e.hostname}`,e.port&&(t+=`:${e.port}`);return t+=`${e.pathname}`,t+=`${e.search}`,t}(n),o={id:e.id,jsonrpc:e.jsonrpc,method:e.method,params:e.params},a=e.origin,l={method:"POST",headers:{Accept:"application/json","Content-Type":"application/json"},body:JSON.stringify(o)};if(n.username&&n.password){const e=`${n.username}:${n.password}`,t=i(e);l.headers.Authorization=`Basic ${t}`}return r&&a&&(l.headers[r]=a),{fetchUrl:s,fetchParams:l}}function h(e){return new Promise((t=>setTimeout(t,e)))}r.createFetchMiddleware=function({rpcUrl:e,originHttpHeaderKey:t}){return(0,n.createAsyncMiddleware)((async(r,n,s)=>{const{fetchUrl:i,fetchParams:u}=d({req:r,rpcUrl:e,originHttpHeaderKey:t});for(let e=0;e<5;e++){try{const e=await o(i,u);l(e);const t=await e.text();let r;try{r=JSON.parse(t)}catch(e){throw new Error(`FetchMiddleware - failed to parse response body: "${t}"`)}const s=c(e,r);return void(n.result=s)}catch(e){const t=e.toString();if(!a.some((e=>t.includes(e))))throw e}await h(1e3)}}))},r.createFetchConfigFromReq=d}}},{package:"@metamask/eth-json-rpc-infura>eth-json-rpc-middleware",file:"node_modules\\@metamask\\eth-json-rpc-infura\\node_modules\\eth-json-rpc-middleware\\dist\\fetch.js"}],[993,{"./block-cache":988,"./block-ref":990,"./block-ref-rewrite":989,"./block-tracker-inspector":991,"./fetch":992,"./inflight-cache":994,"./providerAsMiddleware":995,"./providerFromEngine":996,"./providerFromMiddleware":997,"./retryOnEmpty":998,"./wallet":1e3},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){var n=this&&this.__createBinding||(Object.create?function(e,t,r,n){n===undefined&&(n=r),Object.defineProperty(e,n,{enumerable:!0,get:function(){return t[r]}})}:function(e,t,r,n){n===undefined&&(n=r),e[n]=t[r]}),s=this&&this.__exportStar||function(e,t){for(var r in e)"default"===r||Object.prototype.hasOwnProperty.call(t,r)||n(t,e,r)};Object.defineProperty(r,"__esModule",{value:!0}),s(e("./block-cache"),r),s(e("./block-ref-rewrite"),r),s(e("./block-ref"),r),s(e("./block-tracker-inspector"),r),s(e("./fetch"),r),s(e("./inflight-cache"),r),s(e("./providerAsMiddleware"),r),s(e("./providerFromEngine"),r),s(e("./providerFromMiddleware"),r),s(e("./retryOnEmpty"),r),s(e("./wallet"),r)}}},{package:"@metamask/eth-json-rpc-infura>eth-json-rpc-middleware",file:"node_modules\\@metamask\\eth-json-rpc-infura\\node_modules\\eth-json-rpc-middleware\\dist\\index.js"}],[994,{"./utils/cache":999,clone:1776,"json-rpc-engine":2500},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){var n=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(r,"__esModule",{value:!0}),r.createInflightCacheMiddleware=void 0;const s=n(e("clone")),o=e("json-rpc-engine"),i=e("./utils/cache");r.createInflightCacheMiddleware=function(){const e={};return(0,o.createAsyncMiddleware)((async(t,r,n)=>{if(t.skipCache)return n();const o=(0,i.cacheIdentifierForPayload)(t);if(!o)return n();let a=e[o];return a?(await function(e,t){const{resolve:r,promise:n}=function(){let e;const t=new Promise((t=>{e=t}));return{resolve:e,promise:t}}();return t.push((t=>{e.result=(0,s.default)(t.result),e.error=(0,s.default)(t.error),r()})),n}(r,a),undefined):(a=[],e[o]=a,await n(),delete e[o],function(e,t){setTimeout((()=>{t.forEach((t=>{try{t(e)}catch(e){console.error(e)}}))}))}(r,a),undefined)}))}}}},{package:"@metamask/eth-json-rpc-infura>eth-json-rpc-middleware",file:"node_modules\\@metamask\\eth-json-rpc-infura\\node_modules\\eth-json-rpc-middleware\\dist\\inflight-cache.js"}],[995,{},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.ethersProviderAsMiddleware=r.providerAsMiddleware=void 0,r.providerAsMiddleware=function(e){return(t,r,n,s)=>{e.sendAsync(t,((e,t)=>e instanceof Error?s(e):(Object.assign(r,t),s())))}},r.ethersProviderAsMiddleware=function(e){return(t,r,n,s)=>{e.send(t,((e,t)=>e?s(e):(Object.assign(r,t),s())))}}}}},{package:"@metamask/eth-json-rpc-infura>eth-json-rpc-middleware",file:"node_modules\\@metamask\\eth-json-rpc-infura\\node_modules\\eth-json-rpc-middleware\\dist\\providerAsMiddleware.js"}],[996,{"@metamask/safe-event-emitter":1132},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){var n=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(r,"__esModule",{value:!0}),r.providerFromEngine=void 0;const s=n(e("@metamask/safe-event-emitter"));r.providerFromEngine=function(e){const t=new s.default;return t.sendAsync=(t,r)=>{e.handle(t,r)},t.send=(t,r)=>{if("function"!=typeof r)throw new Error('Must provide callback to "send" method.');e.handle(t,r)},e.on&&e.on("notification",(e=>{t.emit("data",null,e)})),t}}}},{package:"@metamask/eth-json-rpc-infura>eth-json-rpc-middleware",file:"node_modules\\@metamask\\eth-json-rpc-infura\\node_modules\\eth-json-rpc-middleware\\dist\\providerFromEngine.js"}],[997,{"./providerFromEngine":996,"json-rpc-engine":2500},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.providerFromMiddleware=void 0;const n=e("json-rpc-engine"),s=e("./providerFromEngine");r.providerFromMiddleware=function(e){const t=new n.JsonRpcEngine;return t.push(e),(0,s.providerFromEngine)(t)}}}},{package:"@metamask/eth-json-rpc-infura>eth-json-rpc-middleware",file:"node_modules\\@metamask\\eth-json-rpc-infura\\node_modules\\eth-json-rpc-middleware\\dist\\providerFromMiddleware.js"}],[998,{"./utils/cache":999,clone:1776,"json-rpc-engine":2500,pify:1007},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){var n=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(r,"__esModule",{value:!0}),r.createRetryOnEmptyMiddleware=void 0;const s=n(e("clone")),o=e("json-rpc-engine"),i=n(e("pify")),a=e("./utils/cache"),l=[undefined,null,"<nil>"];function c(e){return new Promise((t=>setTimeout(t,e)))}r.createRetryOnEmptyMiddleware=function({provider:e,blockTracker:t}={}){if(!e)throw Error('RetryOnEmptyMiddleware - mandatory "provider" option is missing.');if(!t)throw Error('RetryOnEmptyMiddleware - mandatory "blockTracker" option is missing.');return(0,o.createAsyncMiddleware)((async(r,n,o)=>{var d;const h=(0,a.blockTagParamIndex)(r);if(h===undefined)return o();let u=null===(d=r.params)||void 0===d?void 0:d[h];if(u===undefined&&(u="latest"),["latest","pending"].includes(u))return o();const p=Number.parseInt(u.slice(2),16);if(Number.isNaN(p))return o();const g=await t.getLatestBlock();if(p>Number.parseInt(g.slice(2),16))return o();const f=(0,s.default)(r),m=await async function(e,t){for(let r=0;r<e;r++)try{return await t()}catch(e){await c(1e3)}throw new Error("RetryOnEmptyMiddleware - retries exhausted")}(10,(async()=>{const t=await(0,i.default)(e.sendAsync).call(e,f);if(l.includes(t))throw new Error(`RetryOnEmptyMiddleware - empty response "${JSON.stringify(t)}" for request "${JSON.stringify(f)}"`);return t}));return n.result=m.result,n.error=m.error,o()}))}}}},{package:"@metamask/eth-json-rpc-infura>eth-json-rpc-middleware",file:"node_modules\\@metamask\\eth-json-rpc-infura\\node_modules\\eth-json-rpc-middleware\\dist\\retryOnEmpty.js"}],[999,{"json-stable-stringify":2504},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){var n=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(r,"__esModule",{value:!0}),r.cacheTypeForPayload=r.blockTagParamIndex=r.paramsWithoutBlockTag=r.blockTagForPayload=r.canCache=r.cacheIdentifierForPayload=void 0;const s=n(e("json-stable-stringify"));function o(e){return"never"!==l(e)}function i(e){if(!e.params)return[];const t=a(e);return t===undefined||t>=e.params.length?e.params:"eth_getBlockByNumber"===e.method?e.params.slice(1):e.params.slice(0,t)}function a(e){switch(e.method){case"eth_getStorageAt":return 2;case"eth_getBalance":case"eth_getCode":case"eth_getTransactionCount":case"eth_call":return 1;case"eth_getBlockByNumber":return 0;default:return undefined}}function l(e){switch(e.method){case"web3_clientVersion":case"web3_sha3":case"eth_protocolVersion":case"eth_getBlockTransactionCountByHash":case"eth_getUncleCountByBlockHash":case"eth_getCode":case"eth_getBlockByHash":case"eth_getTransactionByHash":case"eth_getTransactionByBlockHashAndIndex":case"eth_getTransactionReceipt":case"eth_getUncleByBlockHashAndIndex":case"eth_getCompilers":case"eth_compileLLL":case"eth_compileSolidity":case"eth_compileSerpent":case"shh_version":case"test_permaCache":return"perma";case"eth_getBlockByNumber":case"eth_getBlockTransactionCountByNumber":case"eth_getUncleCountByBlockNumber":case"eth_getTransactionByBlockNumberAndIndex":case"eth_getUncleByBlockNumberAndIndex":case"test_forkCache":return"fork";case"eth_gasPrice":case"eth_blockNumber":case"eth_getBalance":case"eth_getStorageAt":case"eth_getTransactionCount":case"eth_call":case"eth_estimateGas":case"eth_getFilterLogs":case"eth_getLogs":case"test_blockCache":return"block";default:return"never"}}r.cacheIdentifierForPayload=function(e,t){var r;const n=t?i(e):null!==(r=e.params)&&void 0!==r?r:[];return o(e)?`${e.method}:${(0,s.default)(n)}`:null},r.canCache=o,r.blockTagForPayload=function(e){if(!e.params)return undefined;const t=a(e);return t===undefined||t>=e.params.length?undefined:e.params[t]},r.paramsWithoutBlockTag=i,r.blockTagParamIndex=a,r.cacheTypeForPayload=l}}},{package:"@metamask/eth-json-rpc-infura>eth-json-rpc-middleware",file:"node_modules\\@metamask\\eth-json-rpc-infura\\node_modules\\eth-json-rpc-middleware\\dist\\utils\\cache.js"}],[4,{"../../shared/constants/app":3258,"../../shared/constants/metametrics":3263,"../../shared/constants/time":3269,"../../shared/modules/browser-runtime.utils":3282,"../../shared/modules/mv3.utils":3289,"../../shared/modules/object.utils":3291,"./first-time-state":37,"./lib/createStreamSink":49,"./lib/ens-ipfs/setup":56,"./lib/get-first-preferred-lang-code":58,"./lib/getObjStructure":59,"./lib/local-store":60,"./lib/migrator":64,"./lib/network-store":65,"./lib/notification-manager":66,"./lib/setupSentry":84,"./lib/util":87,"./metamask-controller":88,"./migrations":166,"./platforms/extension":167,"@metamask/obs-store":1114,"debounce-stream":1867,"end-of-stream":1911,"eth-rpc-errors":1970,"extension-port-stream":2062,loglevel:2745,pump:2843,"webextension-polyfill":3242},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){var n=N(e("end-of-stream")),s=N(e("pump")),o=N(e("debounce-stream")),i=N(e("loglevel")),a=N(e("webextension-polyfill")),l=e("@metamask/obs-store"),c=N(e("extension-port-stream")),d=e("eth-rpc-errors"),h=e("../../shared/constants/app"),u=e("../../shared/constants/time"),p=e("../../shared/constants/metametrics"),g=e("../../shared/modules/browser-runtime.utils"),f=e("../../shared/modules/mv3.utils"),m=e("../../shared/modules/object.utils"),y=N(e("./migrations")),w=N(e("./lib/migrator")),b=N(e("./platforms/extension")),C=N(e("./lib/local-store")),k=(N(e("./lib/network-store")),e("./lib/setupSentry")),v=N(e("./lib/createStreamSink")),T=j(e("./lib/notification-manager")),M=j(e("./metamask-controller")),S=N(e("./first-time-state")),A=N(e("./lib/get-first-preferred-lang-code")),E=N(e("./lib/getObjStructure")),_=N(e("./lib/ens-ipfs/setup")),P=e("./lib/util");function O(e){if("function"!=typeof WeakMap)return null;var t=new WeakMap,r=new WeakMap;return(O=function(e){return e?r:t})(e)}function j(e,t){if(!t&&e&&e.__esModule)return e;if(null===e||"object"!=typeof e&&"function"!=typeof e)return{default:e};var r=O(t);if(r&&r.has(e))return r.get(e);var n={},s=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var o in e)if("default"!==o&&Object.prototype.hasOwnProperty.call(e,o)){var i=s?Object.getOwnPropertyDescriptor(e,o):null;i&&(i.get||i.set)?Object.defineProperty(n,o,i):n[o]=e[o]}return n.default=e,r&&r.set(e,n),n}function N(e){return e&&e.__esModule?e:{default:e}}const{sentry:I}=global,R={...S.default},x={[h.ENVIRONMENT_TYPE_POPUP]:!0,[h.ENVIRONMENT_TYPE_NOTIFICATION]:!0,[h.ENVIRONMENT_TYPE_FULLSCREEN]:!0},B=["trezor-connect"];i.default.setDefaultLevel("info");const L=new b.default,U=new T.default;global.METAMASK_NOTIFIER=U;let F=!1,D=!1,K=!1;const H={},q={};let $;const V=new C.default;let W;const G=new URL("https://metamask.github.io/phishing-warning/v1.2.1/"),z="ACK_KEEP_ALIVE_MESSAGE",J="WORKER_KEEP_ALIVE_MESSAGE",{promise:Q,resolve:Y,reject:X}=(0,P.deferredPromise)();let Z,ee;a.default.runtime.onConnect.addListener((async(...e)=>{await Q,Z(...e)})),a.default.runtime.onConnectExternal.addListener((async(...e)=>{await Q,ee(...e)})),async function(){try{const e=await async function(){const e=new w.default({migrations:y.default});e.on("error",console.warn),W=await V.get()||e.generateInitialState(R),W&&!W.data&&(W=e.generateInitialState(R),I.captureMessage("MetaMask - Empty vault found - unable to recover"));if(e.on("error",(e=>{const t=(0,E.default)(W);I.captureException(e,{extra:{vaultStructure:t}})})),W=await e.migrateData(W),!W)throw new Error("MetaMask - migrator returned undefined");return V.setMetadata(W.meta),V.set(W.data),W.data}(),t=await(0,A.default)();!function(e,t){$=new M.default({infuraProjectId:"9e59cac5922e4bb8b3bd92c3ed90448e",showUserConfirmation:re,openPopup:ne,initState:e,initLangCode:t,platform:L,notificationManager:U,browser:a.default,getRequestAccountTabIds:()=>q,getOpenMetamaskTabsIds:()=>H,localStore:V}),(0,_.default)({getCurrentChainId:$.networkController.getCurrentChainId.bind($.networkController),getIpfsGateway:$.preferencesController.getIpfsGateway.bind($.preferencesController),provider:$.provider}),(0,s.default)((0,l.storeAsStream)($.store),(0,o.default)(1e3),(0,v.default)((e=>V.set(e))),(e=>{i.default.error("MetaMask - Persistence pipeline failed",e)})),r=$,global.stateHooks.getSentryState=function(){const e=r.getState(),t=(0,m.maskObject)({metamask:e},k.SENTRY_STATE);return{browser:window.navigator.userAgent,store:t,version:L.getVersion()}};var r;const u=()=>F||Boolean(Object.keys(H).length)||D,g=(e,t)=>{if(!1===e)$.onClientClosed();else{if(t===h.ENVIRONMENT_TYPE_FULLSCREEN&&Boolean(Object.keys(H).length))return;$.onEnvironmentTypeClosed(t)}};function y(){let e="";const t=w();t&&(e=String(t)),f.isManifestV3?(a.default.action.setBadgeText({text:e}),a.default.action.setBadgeBackgroundColor({color:"#037DD6"})):(a.default.browserAction.setBadgeText({text:e}),a.default.browserAction.setBadgeBackgroundColor({color:"#037DD6"}))}function w(){const e=$.txController.getUnapprovedTxCount(),{unapprovedMsgCount:t}=$.messageManager,{unapprovedPersonalMsgCount:r}=$.personalMessageManager,{unapprovedDecryptMsgCount:n}=$.decryptMessageManager,{unapprovedEncryptionPublicKeyMsgCount:s}=$.encryptionPublicKeyManager,{unapprovedTypedMessagesCount:o}=$.typedMessageManager;return e+t+r+n+s+o+$.approvalController.getTotalApprovalCount()+$.appStateController.waitingForUnlock.length}function b(){Object.keys($.txController.txStateManager.getUnapprovedTxList()).forEach((e=>$.txController.txStateManager.setTxStatusRejected(e))),$.messageManager.messages.filter((e=>"unapproved"===e.status)).forEach((e=>$.messageManager.rejectMsg(e.id,p.REJECT_NOTFICIATION_CLOSE_SIG))),$.personalMessageManager.messages.filter((e=>"unapproved"===e.status)).forEach((e=>$.personalMessageManager.rejectMsg(e.id,p.REJECT_NOTFICIATION_CLOSE_SIG))),$.typedMessageManager.messages.filter((e=>"unapproved"===e.status)).forEach((e=>$.typedMessageManager.rejectMsg(e.id,p.REJECT_NOTFICIATION_CLOSE_SIG))),$.decryptMessageManager.messages.filter((e=>"unapproved"===e.status)).forEach((e=>$.decryptMessageManager.rejectMsg(e.id,p.REJECT_NOTFICIATION_CLOSE))),$.encryptionPublicKeyManager.messages.filter((e=>"unapproved"===e.status)).forEach((e=>$.encryptionPublicKeyManager.rejectMsg(e.id,p.REJECT_NOTFICIATION_CLOSE))),Object.values($.approvalController.state.pendingApprovals).forEach((({id:e,type:t})=>{$.approvalController.reject(e,d.ethErrors.provider.userRejectedRequest())})),y()}Z=async e=>{var t;const r=e.name;if(B.includes(e.name))return;let s=!1;const o=(0,P.getPlatform)(),i=null!==(t=e.sender)&&void 0!==t&&t.url?new URL(e.sender.url):null;if(s=o===h.PLATFORM_FIREFOX?x[r]:(null==i?void 0:i.origin)===`chrome-extension://${a.default.runtime.id}`,s){const t=new c.default(e);if($.isClientOpen=!0,$.setupTrustedCommunication(t,e.sender),f.isManifestV3&&e.onMessage.addListener((t=>{t.name===J&&e.postMessage({name:z})})),r===h.ENVIRONMENT_TYPE_POPUP&&(F=!0,(0,n.default)(t,(()=>{F=!1;const e=u();$.isClientOpen=e,g(e,h.ENVIRONMENT_TYPE_POPUP)}))),r===h.ENVIRONMENT_TYPE_NOTIFICATION&&(D=!0,(0,n.default)(t,(()=>{D=!1;const e=u();$.isClientOpen=e,g(e,h.ENVIRONMENT_TYPE_NOTIFICATION)}))),r===h.ENVIRONMENT_TYPE_FULLSCREEN){const r=e.sender.tab.id;H[r]=!0,(0,n.default)(t,(()=>{delete H[r];const e=u();$.isClientOpen=e,g(e,h.ENVIRONMENT_TYPE_FULLSCREEN)}))}}else if(i&&i.origin===G.origin&&i.pathname===G.pathname){const t=new c.default(e);$.setupPhishingCommunication({connectionStream:t})}else{if(e.sender&&e.sender.tab&&e.sender.url){const t=e.sender.tab.id,r=new URL(e.sender.url),{origin:n}=r;e.onMessage.addListener((e=>{e.data&&"eth_requestAccounts"===e.data.method&&(q[n]=t)}))}ee(e)}},ee=e=>{const t=new c.default(e);$.setupUntrustedCommunication({connectionStream:t,sender:e.sender})},y(),$.txController.on(M.METAMASK_CONTROLLER_EVENTS.UPDATE_BADGE,y),$.messageManager.on(M.METAMASK_CONTROLLER_EVENTS.UPDATE_BADGE,y),$.personalMessageManager.on(M.METAMASK_CONTROLLER_EVENTS.UPDATE_BADGE,y),$.decryptMessageManager.on(M.METAMASK_CONTROLLER_EVENTS.UPDATE_BADGE,y),$.encryptionPublicKeyManager.on(M.METAMASK_CONTROLLER_EVENTS.UPDATE_BADGE,y),$.typedMessageManager.on(M.METAMASK_CONTROLLER_EVENTS.UPDATE_BADGE,y),$.appStateController.on(M.METAMASK_CONTROLLER_EVENTS.UPDATE_BADGE,y),$.controllerMessenger.subscribe(M.METAMASK_CONTROLLER_EVENTS.APPROVAL_STATE_CHANGE,y),U.on(T.NOTIFICATION_MANAGER_EVENTS.POPUP_CLOSED,(({automaticallyClosed:e})=>{e?w()>0&&re():b()}))}(e,t),f.isManifestV3||await async function(){let e;try{const t=new URL("https://metamask.github.io/phishing-warning/v1.2.1/");let r,n;t.hash="#extensionStartup",e=window.document.createElement("iframe"),e.setAttribute("src",t.href),e.setAttribute("sandbox","allow-scripts allow-same-origin");const s=new Promise(((e,t)=>{r=e,n=t}));e.addEventListener("load",r),window.document.body.appendChild(e),setTimeout((()=>n(new te)),1e3),await s}catch(e){e instanceof te?console.warn("Phishing warning page timeout; page not guaraneteed to work offline."):console.error("Failed to initialize phishing warning page",e)}finally{e&&e.remove()}}(),await(async()=>{const e=await a.default.tabs.query({url:"<all_urls>",windowType:"normal"}).then((e=>((0,g.checkForLastErrorAndLog)(),e))).catch((()=>{(0,g.checkForLastErrorAndLog)()}));for(const t of e)a.default.tabs.sendMessage(t.id,{name:h.EXTENSION_MESSAGES.READY}).then((()=>{(0,g.checkForLastErrorAndLog)()})).catch((()=>{(0,g.checkForLastErrorAndLog)()}))})(),i.default.info("MetaMask initialization complete."),Y()}catch(e){X(e)}}().catch(i.default.error);class te extends Error{constructor(){super("Timeout failed")}}async function re(){const e=await L.getActiveTabs(),t=Boolean(e.find((e=>H[e.id]))),r=e.length>0&&e[0].extData&&e[0].extData.indexOf("vivaldi_tab")>-1;if(!K&&(r||!F)&&!t){K=!0;try{await U.showPopup()}finally{K=!1}}}async function ne(){await re(),await new Promise((e=>{const t=setInterval((()=>{D||(clearInterval(t),e())}),u.SECOND)}))}const se=()=>{if($)return $.metaMetricsController.updateTraits({[p.TRAITS.INSTALL_DATE_EXT]:(new Date).toISOString().split("T")[0]}),void $.metaMetricsController.addEventBeforeMetricsOptIn({category:p.EVENT.CATEGORIES.APP,event:p.EVENT_NAMES.APP_INSTALLED,properties:{}});setTimeout((()=>{se()}),1e3)};a.default.runtime.onInstalled.addListener((({reason:e})=>{"install"===e&&(se(),L.openExtensionInBrowser())}))}}},{package:"$root$",file:"app\\scripts\\background.js"}]],[4],{});